---
# The secret-generation role contains the following jobs:
#
# - generate-secrets: This job will generate the secrets for the cluster
apiVersion: {{ if or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (.Capabilities.KubeVersion.Minor | trimSuffix "+" | int) 6)) -}} batch/v1 {{- else -}} extensions/v1beta1 {{- end }}
kind: "Job"
metadata:
  name: "secret-generation-{{ .Release.Revision }}"
spec:
  template:
    metadata:
      name: "secret-generation"
      labels:
        skiff-role-name: "secret-generation"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      containers:
      - env:
        - name: "DOMAIN"
          value: {{ required "DOMAIN configuration missing" .Values.env.DOMAIN | quote }}
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_SECRETS_GENERATION_COUNTER"
          value: {{ .Values.kube.secrets_generation_counter | quote }}
        - name: "KUBE_SECRETS_GENERATION_NAME"
          value: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        - name: "KUBE_SERVICE_DOMAIN_SUFFIX"
          value: {{ .Values.env.KUBE_SERVICE_DOMAIN_SUFFIX | quote }}
        - name: "SCF_LOG_HOST"
          value: {{ .Values.env.SCF_LOG_HOST | quote }}
        - name: "SCF_LOG_PORT"
          value: {{ .Values.env.SCF_LOG_PORT | quote }}
        - name: "SCF_LOG_PROTOCOL"
          value: {{ required "SCF_LOG_PROTOCOL configuration missing" .Values.env.SCF_LOG_PROTOCOL | quote }}
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/uaa-secret-generation:dca7ed165129770a298aa72512c47754d79866bf"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "secret-generation"
        ports: ~
        readinessProbe: ~
        resources:
          requests:
            {{- if and .Values.sizing.memory.requests .Values.sizing.secret_generation.memory.request }}
            memory: "{{ int .Values.sizing.secret_generation.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.sizing.cpu.requests .Values.sizing.secret_generation.cpu.request }}
            cpu: "{{ int .Values.sizing.secret_generation.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.sizing.memory.limits .Values.sizing.secret_generation.memory.limit }}
            memory: "{{ int .Values.sizing.secret_generation.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.sizing.cpu.limits .Values.sizing.secret_generation.cpu.limit }}
            cpu: "{{ int .Values.sizing.secret_generation.cpu.limit }}m"
            {{- end }}

        securityContext: ~
        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "OnFailure"
      {{- if eq (printf "%s" .Values.kube.auth) "rbac" }}
      serviceAccountName: "secret-generator"
      {{- end }}
      terminationGracePeriodSeconds: 600
