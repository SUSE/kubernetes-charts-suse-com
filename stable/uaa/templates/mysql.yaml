---
# The mysql role contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF / fissile
#
# - patch-properties: Dummy BOSH job used to host parameters that are used in
#   patches for upstream bugs
#
# Also: mysql

{{- if gt (int .Values.sizing.mysql.count) 1 }}
_maxReplicas: {{ fail "mysql cannot have more than 1 instances" }}
{{- end }}

{{- if lt (int .Values.sizing.mysql.count) 1 }}
_minReplicas: {{ fail "mysql must have at least 1 instances" }}
{{- end }}

apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "mysql"
  labels:
    skiff-role-name: "mysql"
spec:
  replicas: {{ .Values.sizing.mysql.count }}
  serviceName: "mysql-set"
  template:
    metadata:
      name: "mysql"
      labels:
        skiff-role-name: "mysql"
    spec:
      containers:
      - env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_SERVICE_DOMAIN_SUFFIX"
          value: {{ .Values.env.KUBE_SERVICE_DOMAIN_SUFFIX | quote }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secret"
        - name: "MYSQL_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-admin-password"
              name: "secret"
        - name: "MYSQL_CLUSTER_HEALTH_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-cluster-health-password"
              name: "secret"
        - name: "MYSQL_GALERA_HEALTHCHECK_ENDPOINT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-galera-healthcheck-endpoint-password"
              name: "secret"
        - name: "RELEASE_REVISION"
          value: {{ .Release.Revision | quote }}
        - name: "UAADB_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "uaadb-password"
              name: "secret"
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/uaa-mysql:3e39d5949f20fe6f3f2dee6593875bffeb230f90"
        livenessProbe: ~
        name: "mysql"
        ports:
        - containerPort: 3306
          name: "mysql"
          protocol: "TCP"
        - containerPort: 4567
          name: "galera-tcp"
          protocol: "TCP"
        - containerPort: 4567
          name: "galera-udp"
          protocol: "UDP"
        - containerPort: 4568
          name: "galera-ist"
          protocol: "TCP"
        - containerPort: 9200
          name: "healthcheck"
          protocol: "TCP"
        - containerPort: 4444
          name: "xtrabackup"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 0
          httpGet:
            path: "/"
            port: 9200
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        resources: ~
        securityContext: ~
        volumeMounts:
        - mountPath: "/var/vcap/store"
          name: "mysql-data"
          readOnly: false
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
  {{- if or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (int .Capabilities.KubeVersion.Minor) 7)) }}
  updateStrategy:
    type: "RollingUpdate"
  {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: "mysql-data"
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .Values.kube.storage_class.persistent | quote }}
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "{{ .Values.sizing.mysql.disk_sizes.mysql_data }}G"
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "mysql-set"
  spec:
    {{- if not .Values.services.loadbalanced }}
    clusterIP: "None"
    {{- end }}
    ports:
    - name: "mysql"
      port: 3306
      protocol: "TCP"
      targetPort: 0
    - name: "galera-tcp"
      port: 4567
      protocol: "TCP"
      targetPort: 0
    - name: "galera-udp"
      port: 4567
      protocol: "UDP"
      targetPort: 0
    - name: "galera-ist"
      port: 4568
      protocol: "TCP"
      targetPort: 0
    - name: "healthcheck"
      port: 9200
      protocol: "TCP"
      targetPort: 0
    - name: "xtrabackup"
      port: 4444
      protocol: "TCP"
      targetPort: 0
    selector:
      skiff-role-name: "mysql"
    type: {{ if .Values.services.loadbalanced }} LoadBalancer {{ else }} ClusterIP {{ end }}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "mysql"
  spec:
    ports:
    - name: "mysql"
      port: 3306
      protocol: "TCP"
      targetPort: "mysql"
    - name: "galera-tcp"
      port: 4567
      protocol: "TCP"
      targetPort: "galera-tcp"
    - name: "galera-udp"
      port: 4567
      protocol: "UDP"
      targetPort: "galera-udp"
    - name: "galera-ist"
      port: 4568
      protocol: "TCP"
      targetPort: "galera-ist"
    - name: "healthcheck"
      port: 9200
      protocol: "TCP"
      targetPort: "healthcheck"
    - name: "xtrabackup"
      port: 4444
      protocol: "TCP"
      targetPort: "xtrabackup"
    selector:
      skiff-role-name: "mysql"
    type: {{ if .Values.services.loadbalanced }} LoadBalancer {{ else }} ClusterIP {{ end }}
kind: "List"
