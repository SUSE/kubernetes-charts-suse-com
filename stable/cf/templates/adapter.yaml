---
# The adapter instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# Also: adapter, loggregator_agent

{{- if gt (int .Values.sizing.adapter.count) 65535 }}
_maxReplicas: {{ fail "adapter cannot have more than 65535 instances" }}
{{- end }}

{{- if and .Values.config.HA (and (ne (int .Values.sizing.adapter.count) 1) (lt (int .Values.sizing.adapter.count) 2)) }}
_minHAReplicas: {{ fail "adapter must have at least 2 instances for HA" }}
{{- end }}

{{- if lt (int .Values.sizing.adapter.count) 1 }}
_minReplicas: {{ fail "adapter must have at least 1 instances" }}
{{- end }}

{{- if .Values.sizing.HA }}
_moved_sizing_HA: {{ fail "Bad use of moved variable sizing.HA. The new name to use is config.HA" }}
{{- end }}

{{- if .Values.sizing.cpu }}
_moved_sizing_cpu_limits: {{ if .Values.sizing.cpu.limits }} {{ fail "Bad use of moved variable sizing.cpu.limits. The new name to use is config.cpu.limits" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.cpu }}
_moved_sizing_cpu_requests: {{ if .Values.sizing.cpu.requests }} {{ fail "Bad use of moved variable sizing.cpu.requests. The new name to use is config.cpu.requests" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.memory }}
_moved_sizing_memory_limits: {{ if .Values.sizing.memory.limits }} {{ fail "Bad use of moved variable sizing.memory.limits. The new name to use is config.memory.limits" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.memory }}
_moved_sizing_memory_requests: {{ if .Values.sizing.memory.requests }} {{ fail "Bad use of moved variable sizing.memory.requests. The new name to use is config.memory.requests" }} {{else}} ok {{end}}
{{- end }}

apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "adapter"
  labels:
    skiff-role-name: "adapter"
spec:
  podManagementPolicy: "Parallel"
  replicas: {{ if and .Values.config.HA (eq (int .Values.sizing.adapter.count) 1) -}} 2 {{- else -}} {{ .Values.sizing.adapter.count }} {{- end }}
  serviceName: "adapter-set"
  template:
    metadata:
      name: "adapter"
      labels:
        skiff-role-name: "adapter"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "skiff-role-name"
                  operator: "In"
                  values:
                  - "adapter"
              topologyKey: "beta.kubernetes.io/os"
            weight: 100
        {{- if .Values.sizing.adapter.affinity.nodeAffinity }}
        nodeAffinity: {{ toJson .Values.sizing.adapter.affinity.nodeAffinity }}
        {{- end }}
      containers:
      - env:
        - name: "CATS_SUITES"
          value: {{if ne (typeOf .Values.env.CATS_SUITES) "<nil>"}}{{if has (kindOf .Values.env.CATS_SUITES) (list "map" "slice")}}{{.Values.env.CATS_SUITES | toJson | quote}}{{else}}{{.Values.env.CATS_SUITES | quote}}{{end}}{{else}}""{{end}}
        - name: "GARDEN_ROOTFS_DRIVER"
          value: {{if ne (typeOf .Values.env.GARDEN_ROOTFS_DRIVER) "<nil>"}}{{if has (kindOf .Values.env.GARDEN_ROOTFS_DRIVER) (list "map" "slice")}}{{.Values.env.GARDEN_ROOTFS_DRIVER | toJson | quote}}{{else}}{{.Values.env.GARDEN_ROOTFS_DRIVER | quote}}{{end}}{{else}}{{fail "env.GARDEN_ROOTFS_DRIVER has not been set"}}{{end}}

        {{- if not .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        {{- end }}

        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: {{if ne (typeOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) (list "map" "slice")}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | toJson | quote}}{{else}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | quote}}{{end}}{{else}}""{{end}}
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"

        {{- if not .Values.secrets.LOGGREGATOR_AGENT_CERT }}
        - name: "LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.LOGGREGATOR_AGENT_CERT }}
        - name: "LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.LOGGREGATOR_AGENT_KEY }}
        - name: "LOGGREGATOR_AGENT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.LOGGREGATOR_AGENT_KEY }}
        - name: "LOGGREGATOR_AGENT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-key"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "SCF_LOG_HOST"
          value: {{if ne (typeOf .Values.env.SCF_LOG_HOST) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_HOST) (list "map" "slice")}}{{.Values.env.SCF_LOG_HOST | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_HOST | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PORT"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PORT) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PORT) (list "map" "slice")}}{{.Values.env.SCF_LOG_PORT | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PROTOCOL"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PROTOCOL) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PROTOCOL) (list "map" "slice")}}{{.Values.env.SCF_LOG_PROTOCOL | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PROTOCOL | quote}}{{end}}{{else}}{{fail "env.SCF_LOG_PROTOCOL has not been set"}}{{end}}

        {{- if not .Values.secrets.SYSLOG_ADAPT_CERT }}
        - name: "SYSLOG_ADAPT_CERT"
          valueFrom:
            secretKeyRef:
              key: "syslog-adapt-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.SYSLOG_ADAPT_CERT }}
        - name: "SYSLOG_ADAPT_CERT"
          valueFrom:
            secretKeyRef:
              key: "syslog-adapt-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.SYSLOG_ADAPT_KEY }}
        - name: "SYSLOG_ADAPT_KEY"
          valueFrom:
            secretKeyRef:
              key: "syslog-adapt-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.SYSLOG_ADAPT_KEY }}
        - name: "SYSLOG_ADAPT_KEY"
          valueFrom:
            secretKeyRef:
              key: "syslog-adapt-key"
              name: "secrets"
        {{- end }}

        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-adapter:88b4bc84cf9c77099a2415137f966c37f33aeaba"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "adapter"
        ports:
        - containerPort: 4443
          name: "adapter"
          protocol: "TCP"
        - containerPort: 8080
          name: "adapter-health"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
            - "curl --silent --fail --head http://${HOSTNAME}:8080/health"
        resources:
          requests:
            {{- if and .Values.config.memory.requests .Values.sizing.adapter.memory.request }}
            memory: "{{ int .Values.sizing.adapter.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.requests .Values.sizing.adapter.cpu.request }}
            cpu: "{{ int .Values.sizing.adapter.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.config.memory.limits .Values.sizing.adapter.memory.limit }}
            memory: "{{ int .Values.sizing.adapter.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.limits .Values.sizing.adapter.cpu.limit }}
            cpu: "{{ int .Values.sizing.adapter.cpu.limit }}m"
            {{- end }}

        securityContext:
          {{- if has "ALL" .Values.sizing.adapter.capabilities }}
          privileged: true
          {{- end }}

          {{- if not (has "ALL" .Values.sizing.adapter.capabilities) }}
          capabilities:
            add:
            {{- range .Values.sizing.adapter.capabilities }}
            - {{ . | upper }}
            {{- end }}
          {{- end }}

        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 600
      volumes: ~
  {{- if or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (.Capabilities.KubeVersion.Minor | trimSuffix "+" | int) 7)) }}
  updateStrategy:
    type: "RollingUpdate"
  {{- end }}
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "adapter-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "adapter"
      port: 4443
      protocol: "TCP"
      targetPort: 0
    - name: "adapter-health"
      port: 8080
      protocol: "TCP"
      targetPort: 0
    selector:
      skiff-role-name: "adapter"
kind: "List"
