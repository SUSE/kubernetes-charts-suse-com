---
# Service account "eirini" is used by the following instance groups:
# - post-deployment-setup
{{- if and (eq (printf "%s" .Values.kube.auth) "rbac") (.Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1") }}
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: "eirini"
  labels:
    app.kubernetes.io/component: "eirini"
    skiff-role-name: "eirini"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
{{- end }}
---
# Role binding for service account "eirini" and role "configgin-role"
{{- if and (eq (printf "%s" .Values.kube.auth) "rbac") (.Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1") }}
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "RoleBinding"
metadata:
  name: "eirini-configgin-role-binding"
  labels:
    app.kubernetes.io/component: "eirini-configgin-role-binding"
    skiff-role-name: "eirini-configgin-role-binding"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
subjects:
- kind: "ServiceAccount"
  name: "eirini"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "Role"
  name: "configgin-role"
{{- end }}
---
# Cluster role binding for service account "eirini" and cluster role
# "eirini-role"
{{- if and (eq (printf "%s" .Values.kube.auth) "rbac") (.Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1") }}
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: {{ template "fissile.SanitizeName" (printf "%s-eirini-eirini-role-cluster-binding" .Release.Namespace) }}
  labels:
    app.kubernetes.io/component: {{ template "fissile.SanitizeName" (printf "%s-eirini-eirini-role-cluster-binding" .Release.Namespace) }}
    skiff-role-name: {{ template "fissile.SanitizeName" (printf "%s-eirini-eirini-role-cluster-binding" .Release.Namespace) }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
subjects:
- kind: "ServiceAccount"
  name: "eirini"
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: {{ template "fissile.SanitizeName" (printf "%s-cluster-role-eirini-role" .Release.Namespace) }}
{{- end }}
---
# The post-deployment-setup instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - uaa-create-user: Create the initial user in UAA
#
# - configure-scf: Uses the cf CLI to configure SCF once it's online (things
#   like proxy settings, service brokers, etc.)
apiVersion: "batch/v1"
kind: "Job"
metadata:
  name: "post-deployment-setup-{{ .Release.Revision }}"
  labels:
    app.kubernetes.io/component: "post-deployment-setup-{{ .Release.Revision }}"
    skiff-role-name: "post-deployment-setup-{{ .Release.Revision }}"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
spec:
  template:
    metadata:
      name: "post-deployment-setup"
      labels:
        app.kubernetes.io/component: "post-deployment-setup"
        skiff-role-name: "post-deployment-setup"
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
        app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
        helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}

        {{- if .Values.config.use_istio }}
        app: "post-deployment-setup"
        {{- end }}

        {{- if .Values.config.use_istio }}
        version: {{ default .Chart.Version .Chart.AppVersion | quote }}
        {{- end }}

      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      containers:
      - env:
        {{- if .Values.secrets.AUTOSCALER_UAA_CLIENT_SECRET }}
        - name: "AUTOSCALER_UAA_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "autoscaler-uaa-client-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.AUTOSCALER_UAA_CLIENT_SECRET }}
        - name: "AUTOSCALER_UAA_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "autoscaler-uaa-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "AZ_LABEL_NAME"
          value: {{if ne (typeOf .Values.env.AZ_LABEL_NAME) "<nil>"}}{{if has (kindOf .Values.env.AZ_LABEL_NAME) (list "map" "slice")}}{{.Values.env.AZ_LABEL_NAME | toJson | quote}}{{else}}{{.Values.env.AZ_LABEL_NAME | quote}}{{end}}{{else}}""{{end}}
        - name: "CATS_SUITES"
          value: {{if ne (typeOf .Values.env.CATS_SUITES) "<nil>"}}{{if has (kindOf .Values.env.CATS_SUITES) (list "map" "slice")}}{{.Values.env.CATS_SUITES | toJson | quote}}{{else}}{{.Values.env.CATS_SUITES | quote}}{{end}}{{else}}""{{end}}
        - name: "CLUSTER_ADMIN_AUTHORITIES"
          value: {{if ne (typeOf .Values.env.CLUSTER_ADMIN_AUTHORITIES) "<nil>"}}{{if has (kindOf .Values.env.CLUSTER_ADMIN_AUTHORITIES) (list "map" "slice")}}{{.Values.env.CLUSTER_ADMIN_AUTHORITIES | toJson | quote}}{{else}}{{.Values.env.CLUSTER_ADMIN_AUTHORITIES | quote}}{{end}}{{else}}{{fail "env.CLUSTER_ADMIN_AUTHORITIES has not been set"}}{{end}}
        - name: "CLUSTER_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "cluster-admin-password"
              name: "secrets"
        - name: "DOMAIN"
          value: {{if ne (typeOf .Values.env.DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.DOMAIN) (list "map" "slice")}}{{.Values.env.DOMAIN | toJson | quote}}{{else}}{{.Values.env.DOMAIN | quote}}{{end}}{{else}}{{fail "env.DOMAIN has not been set"}}{{end}}
        - name: "EIRINI_CERT_COPIER_IMAGE"
          value: {{if ne (typeOf .Values.env.EIRINI_CERT_COPIER_IMAGE) "<nil>"}}{{if has (kindOf .Values.env.EIRINI_CERT_COPIER_IMAGE) (list "map" "slice")}}{{.Values.env.EIRINI_CERT_COPIER_IMAGE | toJson | quote}}{{else}}{{.Values.env.EIRINI_CERT_COPIER_IMAGE | quote}}{{end}}{{else}}""{{end}}
        - name: "EIRINI_FLUENTD_IMAGE"
          value: {{if ne (typeOf .Values.env.EIRINI_FLUENTD_IMAGE) "<nil>"}}{{if has (kindOf .Values.env.EIRINI_FLUENTD_IMAGE) (list "map" "slice")}}{{.Values.env.EIRINI_FLUENTD_IMAGE | toJson | quote}}{{else}}{{.Values.env.EIRINI_FLUENTD_IMAGE | quote}}{{end}}{{else}}""{{end}}
        - name: "EIRINI_KUBE_NAMESPACE"
          value: {{if ne (typeOf .Values.env.EIRINI_KUBE_NAMESPACE) "<nil>"}}{{if has (kindOf .Values.env.EIRINI_KUBE_NAMESPACE) (list "map" "slice")}}{{.Values.env.EIRINI_KUBE_NAMESPACE | toJson | quote}}{{else}}{{.Values.env.EIRINI_KUBE_NAMESPACE | quote}}{{end}}{{else}}""{{end}}
        - name: "FEATURE_EIRINI_ENABLED"
          value: {{ .Values.enable.eirini | quote }}
        - name: "GARDEN_ROOTFS_DRIVER"
          value: {{if ne (typeOf .Values.env.GARDEN_ROOTFS_DRIVER) "<nil>"}}{{if has (kindOf .Values.env.GARDEN_ROOTFS_DRIVER) (list "map" "slice")}}{{.Values.env.GARDEN_ROOTFS_DRIVER | toJson | quote}}{{else}}{{.Values.env.GARDEN_ROOTFS_DRIVER | quote}}{{end}}{{else}}{{fail "env.GARDEN_ROOTFS_DRIVER has not been set"}}{{end}}
        - name: "HTTPS_PROXY"
          value: {{if ne (typeOf .Values.env.HTTPS_PROXY) "<nil>"}}{{if has (kindOf .Values.env.HTTPS_PROXY) (list "map" "slice")}}{{.Values.env.HTTPS_PROXY | toJson | quote}}{{else}}{{.Values.env.HTTPS_PROXY | quote}}{{end}}{{else}}""{{end}}
        - name: "HTTP_PROXY"
          value: {{if ne (typeOf .Values.env.HTTP_PROXY) "<nil>"}}{{if has (kindOf .Values.env.HTTP_PROXY) (list "map" "slice")}}{{.Values.env.HTTP_PROXY | toJson | quote}}{{else}}{{.Values.env.HTTP_PROXY | quote}}{{end}}{{else}}""{{end}}

        {{- if not .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        {{- end }}

        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: {{if ne (typeOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) (list "map" "slice")}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | toJson | quote}}{{else}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | quote}}{{end}}{{else}}""{{end}}
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_SECRETS_GENERATION_NAME"
          value: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"

        {{- if .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "NO_PROXY"
          value: {{if ne (typeOf .Values.env.NO_PROXY) "<nil>"}}{{if has (kindOf .Values.env.NO_PROXY) (list "map" "slice")}}{{.Values.env.NO_PROXY | toJson | quote}}{{else}}{{.Values.env.NO_PROXY | quote}}{{end}}{{else}}""{{end}}

        {{- if not .Values.secrets.PERSI_NFS_BROKER_PASSWORD }}
        - name: "PERSI_NFS_BROKER_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "persi-nfs-broker-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.PERSI_NFS_BROKER_PASSWORD }}
        - name: "PERSI_NFS_BROKER_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "persi-nfs-broker-password"
              name: "secrets"
        {{- end }}

        - name: "PZ_LABEL_NAME"
          value: {{if ne (typeOf .Values.env.PZ_LABEL_NAME) "<nil>"}}{{if has (kindOf .Values.env.PZ_LABEL_NAME) (list "map" "slice")}}{{.Values.env.PZ_LABEL_NAME | toJson | quote}}{{else}}{{.Values.env.PZ_LABEL_NAME | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_HOST"
          value: {{if ne (typeOf .Values.env.SCF_LOG_HOST) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_HOST) (list "map" "slice")}}{{.Values.env.SCF_LOG_HOST | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_HOST | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PORT"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PORT) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PORT) (list "map" "slice")}}{{.Values.env.SCF_LOG_PORT | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PROTOCOL"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PROTOCOL) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PROTOCOL) (list "map" "slice")}}{{.Values.env.SCF_LOG_PROTOCOL | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PROTOCOL | quote}}{{end}}{{else}}{{fail "env.SCF_LOG_PROTOCOL has not been set"}}{{end}}
        - name: "UAA_ADMIN_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-admin-client-secret"
              name: "secrets"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"

        {{- if not .Values.secrets.UAA_CC_CLIENT_SECRET }}
        - name: "UAA_CC_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-cc-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CC_CLIENT_SECRET }}
        - name: "UAA_CC_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-cc-client-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CC_ROUTING_SECRET }}
        - name: "UAA_CLIENTS_CC_ROUTING_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-routing-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CC_ROUTING_SECRET }}
        - name: "UAA_CLIENTS_CC_ROUTING_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-routing-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-dashboards-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-dashboards-client-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-key-client-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-key-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CF_USB_SECRET }}
        - name: "UAA_CLIENTS_CF_USB_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cf-usb-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CF_USB_SECRET }}
        - name: "UAA_CLIENTS_CF_USB_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cf-usb-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET }}
        - name: "UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cloud-controller-username-lookup-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET }}
        - name: "UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cloud-controller-username-lookup-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CREDHUB_USER_CLI_SECRET }}
        - name: "UAA_CLIENTS_CREDHUB_USER_CLI_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-credhub-user-cli-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CREDHUB_USER_CLI_SECRET }}
        - name: "UAA_CLIENTS_CREDHUB_USER_CLI_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-credhub-user-cli-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET }}
        - name: "UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-diego-ssh-proxy-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET }}
        - name: "UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-diego-ssh-proxy-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_DOPPLER_SECRET }}
        - name: "UAA_CLIENTS_DOPPLER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-doppler-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_DOPPLER_SECRET }}
        - name: "UAA_CLIENTS_DOPPLER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-doppler-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_GOROUTER_SECRET }}
        - name: "UAA_CLIENTS_GOROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-gorouter-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_GOROUTER_SECRET }}
        - name: "UAA_CLIENTS_GOROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-gorouter-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_LOGIN_SECRET }}
        - name: "UAA_CLIENTS_LOGIN_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-login-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_LOGIN_SECRET }}
        - name: "UAA_CLIENTS_LOGIN_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-login-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET }}
        - name: "UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-scf-auto-config-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET }}
        - name: "UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-scf-auto-config-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_TCP_EMITTER_SECRET }}
        - name: "UAA_CLIENTS_TCP_EMITTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-emitter-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_TCP_EMITTER_SECRET }}
        - name: "UAA_CLIENTS_TCP_EMITTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-emitter-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_TCP_ROUTER_SECRET }}
        - name: "UAA_CLIENTS_TCP_ROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-router-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_TCP_ROUTER_SECRET }}
        - name: "UAA_CLIENTS_TCP_ROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-router-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "UAA_HOST"
          value: {{if ne (typeOf .Values.env.UAA_HOST) "<nil>"}}{{if has (kindOf .Values.env.UAA_HOST) (list "map" "slice")}}{{.Values.env.UAA_HOST | toJson | quote}}{{else}}{{.Values.env.UAA_HOST | quote}}{{end}}{{else}}{{fail "env.UAA_HOST has not been set"}}{{end}}
        - name: "UAA_PORT"
          value: {{if ne (typeOf .Values.env.UAA_PORT) "<nil>"}}{{if has (kindOf .Values.env.UAA_PORT) (list "map" "slice")}}{{.Values.env.UAA_PORT | toJson | quote}}{{else}}{{.Values.env.UAA_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "VCAP_HARD_NPROC"
          value: {{ .Values.kube.limits.nproc.hard | quote }}
        - name: "VCAP_SOFT_NPROC"
          value: {{ .Values.kube.limits.nproc.soft | quote }}
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-post-deployment-setup:168432317fcc3bdf30360fc982a651a9d104ef33"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "post-deployment-setup"
        ports: ~
        readinessProbe: ~
        resources:
          requests:
            {{- if and .Values.config.memory.requests .Values.sizing.post_deployment_setup.memory.request }}
            memory: "{{ int .Values.sizing.post_deployment_setup.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.requests .Values.sizing.post_deployment_setup.cpu.request }}
            cpu: "{{ int .Values.sizing.post_deployment_setup.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.config.memory.limits .Values.sizing.post_deployment_setup.memory.limit }}
            memory: "{{ int .Values.sizing.post_deployment_setup.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.limits .Values.sizing.post_deployment_setup.cpu.limit }}
            cpu: "{{ int .Values.sizing.post_deployment_setup.cpu.limit }}m"
            {{- end }}

        securityContext:
          {{- if has "ALL" .Values.sizing.post_deployment_setup.capabilities }}
          privileged: true
          {{- end }}

          {{- if not (has "ALL" .Values.sizing.post_deployment_setup.capabilities) }}
          capabilities:
            add:
            {{- range .Values.sizing.post_deployment_setup.capabilities }}
            - {{ . | upper }}
            {{- end }}
          {{- end }}

          allowPrivilegeEscalation: {{ if has "ALL" .Values.sizing.post_deployment_setup.capabilities -}} true {{- else -}} false {{- end }}
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "OnFailure"
      {{- if and (eq (printf "%s" .Values.kube.auth) "rbac") (.Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1") }}
      serviceAccountName: "eirini"
      {{- end }}
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
