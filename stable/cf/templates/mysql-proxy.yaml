---
# The mysql-proxy role contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - patch-properties: Dummy BOSH job used to host parameters that are used in
#   SCF patches for upstream bugs
#
# Also: proxy

{{- if gt (int .Values.sizing.mysql_proxy.count) 3 }}
_maxReplicas: {{ fail "mysql_proxy cannot have more than 3 instances" }}
{{- end }}

{{- if and .Values.sizing.HA (and (ne (int .Values.sizing.mysql_proxy.count) 1) (lt (int .Values.sizing.mysql_proxy.count) 2)) }}
_minHAReplicas: {{ fail "mysql_proxy must have at least 2 instances for HA" }}
{{- end }}

{{- if lt (int .Values.sizing.mysql_proxy.count) 1 }}
_minReplicas: {{ fail "mysql_proxy must have at least 1 instances" }}
{{- end }}

apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "mysql-proxy"
  labels:
    skiff-role-name: "mysql-proxy"
spec:
  replicas: {{ if and .Values.sizing.HA (eq (int .Values.sizing.mysql_proxy.count) 1) -}} 2 {{- else -}} {{ .Values.sizing.mysql_proxy.count }} {{- end }}
  selector:
    matchLabels:
      skiff-role-name: "mysql-proxy"
  template:
    metadata:
      name: "mysql-proxy"
      labels:
        skiff-role-name: "mysql-proxy"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      containers:
      - env:
        - name: "CATS_SUITES"
          value: {{ .Values.env.CATS_SUITES | quote }}

        {{- if not .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.INTERNAL_CA_KEY }}
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_KEY }}
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secrets"
        {{- end }}

        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_SERVICE_DOMAIN_SUFFIX"
          value: {{ .Values.env.KUBE_SERVICE_DOMAIN_SUFFIX | quote }}

        {{- if not .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.MYSQL_PROXY_ADMIN_PASSWORD }}
        - name: "MYSQL_PROXY_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-proxy-admin-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.MYSQL_PROXY_ADMIN_PASSWORD }}
        - name: "MYSQL_PROXY_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-proxy-admin-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "MYSQL_PROXY_HEALTHCHECK_TIMEOUT"
          value: {{ required "MYSQL_PROXY_HEALTHCHECK_TIMEOUT configuration missing" .Values.env.MYSQL_PROXY_HEALTHCHECK_TIMEOUT | quote }}
        - name: "SCF_LOG_HOST"
          value: {{ .Values.env.SCF_LOG_HOST | quote }}
        - name: "SCF_LOG_PORT"
          value: {{ .Values.env.SCF_LOG_PORT | quote }}
        - name: "SCF_LOG_PROTOCOL"
          value: {{ required "SCF_LOG_PROTOCOL configuration missing" .Values.env.SCF_LOG_PROTOCOL | quote }}
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-mysql-proxy:4783731de92848bd1ce27fed53d133c91d12711d"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "mysql-proxy"
        ports:
        - containerPort: 3306
          name: "mysql-proxy"
          protocol: "TCP"
        - containerPort: 80
          name: "api"
          protocol: "TCP"
        - containerPort: 1936
          name: "healthcheck"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 0
          httpGet:
            path: "/"
            port: 1936
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        resources:
          requests:
            {{- if and .Values.sizing.memory.requests .Values.sizing.mysql_proxy.memory.request }}
            memory: "{{ int .Values.sizing.mysql_proxy.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.sizing.cpu.requests .Values.sizing.mysql_proxy.cpu.request }}
            cpu: "{{ int .Values.sizing.mysql_proxy.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.sizing.memory.limits .Values.sizing.mysql_proxy.memory.limit }}
            memory: "{{ int .Values.sizing.mysql_proxy.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.sizing.cpu.limits .Values.sizing.mysql_proxy.cpu.limit }}
            cpu: "{{ int .Values.sizing.mysql_proxy.cpu.limit }}m"
            {{- end }}

        securityContext:
          {{- if has "ALL" .Values.sizing.mysql_proxy.capabilities }}
          privileged: true
          {{- end }}

          {{- if not (has "ALL" .Values.sizing.mysql_proxy.capabilities) }}
          capabilities:
            add:
            {{- range .Values.sizing.mysql_proxy.capabilities }}
            - {{ . | upper }}
            {{- end }}
          {{- end }}

        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 600
      volumes: ~
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "mysql-proxy"
  spec:
    ports:
    - name: "mysql-proxy"
      port: 3306
      protocol: "TCP"
      targetPort: "mysql-proxy"
    - name: "api"
      port: 80
      protocol: "TCP"
      targetPort: "api"
    - name: "healthcheck"
      port: 1936
      protocol: "TCP"
      targetPort: "healthcheck"
    selector:
      skiff-role-name: "mysql-proxy"
    type: {{ if .Values.services.loadbalanced }} LoadBalancer {{ else }} ClusterIP {{ end }}
kind: "List"
