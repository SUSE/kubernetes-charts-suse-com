---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "router-set"
    labels:
      app.kubernetes.io/component: "router-set"
      skiff-role-name: "router-set"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
      app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
      helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
      {{- if .Values.config.use_istio }}
      app: "router-set"
      {{- end }}
  spec:
    clusterIP: "None"
    ports:
    - name: "router"
      port: 80
      protocol: "TCP"
      targetPort: 0
    - name: "router-ssl"
      port: 443
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "router"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "router-gorouter-set"
    labels:
      app.kubernetes.io/component: "router-gorouter-set"
      skiff-role-name: "router-gorouter-set"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
      app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
      helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
      {{- if .Values.config.use_istio }}
      app: "router-gorouter-set"
      {{- end }}
  spec:
    clusterIP: "None"
    ports:
    - name: "router"
      port: 80
      protocol: "TCP"
      targetPort: 0
    - name: "router-ssl"
      port: 443
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "router"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "router-gorouter"
    labels:
      app.kubernetes.io/component: "router-gorouter"
      skiff-role-name: "router-gorouter"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
      app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
      helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
      {{- if .Values.config.use_istio }}
      app: "router-gorouter"
      {{- end }}
  spec:
    ports:
    - name: "router"
      port: 80
      protocol: "TCP"
      targetPort: 8000
    - name: "router-ssl"
      port: 443
      protocol: "TCP"
      targetPort: 443
    selector:
      app.kubernetes.io/component: "router"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "router-gorouter-public"
    labels:
      app.kubernetes.io/component: "router-gorouter-public"
      skiff-role-name: "router-gorouter-public"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
      app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
      helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
      {{- if .Values.config.use_istio }}
      app: "router-gorouter-public"
      {{- end }}
  spec:
    {{- if not (or .Values.services.loadbalanced .Values.ingress.enabled) }}
    externalIPs: {{ .Values.kube.external_ips | toJson }}
    {{- end }}

    ports:
    - name: "router"
      port: 80
      protocol: "TCP"
      targetPort: 8000
    - name: "router-ssl"
      port: 443
      protocol: "TCP"
      targetPort: 443
    selector:
      app.kubernetes.io/component: "router"

    {{- if .Values.services.loadbalanced }}
    type: "LoadBalancer"
    {{- end }}

  {{- if and .Values.services.loadbalanced .Values.ingress.enabled }}
  _incompatible: {{ fail "services.loadbalanced and ingress.enabled cannot both be set" }}
  {{- end }}
kind: "List"
---
# The router instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - gorouter: Gorouter maintains a dynamic routing table based on updates
#   received from NATS and (when enabled) the Routing API. This routing table
#   maps URLs to backends. The router finds the URL in the routing table that
#   most closely matches the host header of the request and load balances across
#   the associated backends.
#
# Also: bpm

{{- if gt (int .Values.sizing.router.count) 65535 }}
_maxReplicas: {{ fail "router cannot have more than 65535 instances" }}
{{- end }}

{{- if and .Values.config.HA (and (ne (int .Values.sizing.router.count) 1) (lt (int .Values.sizing.router.count) 2)) }}
_minHAReplicas: {{ fail "router must have at least 2 instances for HA" }}
{{- end }}

{{- if lt (int .Values.sizing.router.count) 1 }}
_minReplicas: {{ fail "router must have at least 1 instances" }}
{{- end }}

{{- if .Values.sizing.HA }}
_moved_sizing_HA: {{ fail "Bad use of moved variable sizing.HA. The new name to use is config.HA" }}
{{- end }}

{{- if .Values.sizing.cpu }}
_moved_sizing_cpu_limits: {{ if .Values.sizing.cpu.limits }} {{ fail "Bad use of moved variable sizing.cpu.limits. The new name to use is config.cpu.limits" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.cpu }}
_moved_sizing_cpu_requests: {{ if .Values.sizing.cpu.requests }} {{ fail "Bad use of moved variable sizing.cpu.requests. The new name to use is config.cpu.requests" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.memory }}
_moved_sizing_memory_limits: {{ if .Values.sizing.memory.limits }} {{ fail "Bad use of moved variable sizing.memory.limits. The new name to use is config.memory.limits" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.memory }}
_moved_sizing_memory_requests: {{ if .Values.sizing.memory.requests }} {{ fail "Bad use of moved variable sizing.memory.requests. The new name to use is config.memory.requests" }} {{else}} ok {{end}}
{{- end }}

apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "router"
  labels:
    app.kubernetes.io/component: "router"
    skiff-role-name: "router"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}

    {{- if .Values.config.use_istio }}
    app: "router"
    {{- end }}

    {{- if .Values.config.use_istio }}
    version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    {{- end }}

spec:
  podManagementPolicy: "Parallel"
  replicas: {{ if and .Values.config.HA (eq (int .Values.sizing.router.count) 1) -}} 2 {{- else -}} {{ .Values.sizing.router.count }} {{- end }}
  selector:
    matchLabels:
      skiff-role-name: "router"
  serviceName: "router-set"
  template:
    metadata:
      name: "router"
      labels:
        app.kubernetes.io/component: "router"
        skiff-role-name: "router"
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
        app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
        helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}

        {{- if .Values.config.use_istio }}
        app: "router"
        {{- end }}

        {{- if .Values.config.use_istio }}
        version: {{ default .Chart.Version .Chart.AppVersion | quote }}
        {{- end }}

      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.config.use_istio }}
        sidecar.istio.io/inject: "false"
        {{- end }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/component"
                  operator: "In"
                  values:
                  - "diego-cell"
              topologyKey: "beta.kubernetes.io/os"
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/component"
                  operator: "In"
                  values:
                  - "router"
              topologyKey: "beta.kubernetes.io/os"
            weight: 100
        {{- if .Values.sizing.router.affinity.nodeAffinity }}
        nodeAffinity: {{ toJson .Values.sizing.router.affinity.nodeAffinity }}
        {{- end }}
      containers:
      - env:
        - name: "AZ_LABEL_NAME"
          value: {{if ne (typeOf .Values.env.AZ_LABEL_NAME) "<nil>"}}{{if has (kindOf .Values.env.AZ_LABEL_NAME) (list "map" "slice")}}{{.Values.env.AZ_LABEL_NAME | toJson | quote}}{{else}}{{.Values.env.AZ_LABEL_NAME | quote}}{{end}}{{else}}""{{end}}
        - name: "CATS_SUITES"
          value: {{if ne (typeOf .Values.env.CATS_SUITES) "<nil>"}}{{if has (kindOf .Values.env.CATS_SUITES) (list "map" "slice")}}{{.Values.env.CATS_SUITES | toJson | quote}}{{else}}{{.Values.env.CATS_SUITES | quote}}{{end}}{{else}}""{{end}}
        - name: "FORCE_FORWARDED_PROTO_AS_HTTPS"
          value: {{if ne (typeOf .Values.env.FORCE_FORWARDED_PROTO_AS_HTTPS) "<nil>"}}{{if has (kindOf .Values.env.FORCE_FORWARDED_PROTO_AS_HTTPS) (list "map" "slice")}}{{.Values.env.FORCE_FORWARDED_PROTO_AS_HTTPS | toJson | quote}}{{else}}{{.Values.env.FORCE_FORWARDED_PROTO_AS_HTTPS | quote}}{{end}}{{else}}{{fail "env.FORCE_FORWARDED_PROTO_AS_HTTPS has not been set"}}{{end}}
        - name: "GARDEN_ROOTFS_DRIVER"
          value: {{if ne (typeOf .Values.env.GARDEN_ROOTFS_DRIVER) "<nil>"}}{{if has (kindOf .Values.env.GARDEN_ROOTFS_DRIVER) (list "map" "slice")}}{{.Values.env.GARDEN_ROOTFS_DRIVER | toJson | quote}}{{else}}{{.Values.env.GARDEN_ROOTFS_DRIVER | quote}}{{end}}{{else}}{{fail "env.GARDEN_ROOTFS_DRIVER has not been set"}}{{end}}

        {{- if not .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        {{- end }}

        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: {{if ne (typeOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) (list "map" "slice")}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | toJson | quote}}{{else}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | quote}}{{end}}{{else}}""{{end}}
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_SIZING_NATS_COUNT"
          value: {{ .Values.sizing.nats.count | quote }}
        - name: "LOG_LEVEL"
          value: {{if ne (typeOf .Values.env.LOG_LEVEL) "<nil>"}}{{if has (kindOf .Values.env.LOG_LEVEL) (list "map" "slice")}}{{.Values.env.LOG_LEVEL | toJson | quote}}{{else}}{{.Values.env.LOG_LEVEL | quote}}{{end}}{{else}}{{fail "env.LOG_LEVEL has not been set"}}{{end}}

        {{- if .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.NATS_PASSWORD }}
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.NATS_PASSWORD }}
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secrets"
        {{- end }}

        - name: "PZ_LABEL_NAME"
          value: {{if ne (typeOf .Values.env.PZ_LABEL_NAME) "<nil>"}}{{if has (kindOf .Values.env.PZ_LABEL_NAME) (list "map" "slice")}}{{.Values.env.PZ_LABEL_NAME | toJson | quote}}{{else}}{{.Values.env.PZ_LABEL_NAME | quote}}{{end}}{{else}}""{{end}}
        - name: "ROUTER_BALANCING_ALGORITHM"
          value: {{if ne (typeOf .Values.env.ROUTER_BALANCING_ALGORITHM) "<nil>"}}{{if has (kindOf .Values.env.ROUTER_BALANCING_ALGORITHM) (list "map" "slice")}}{{.Values.env.ROUTER_BALANCING_ALGORITHM | toJson | quote}}{{else}}{{.Values.env.ROUTER_BALANCING_ALGORITHM | quote}}{{end}}{{else}}""{{end}}
        - name: "ROUTER_CLIENT_CERT_VALIDATION"
          value: {{if ne (typeOf .Values.env.ROUTER_CLIENT_CERT_VALIDATION) "<nil>"}}{{if has (kindOf .Values.env.ROUTER_CLIENT_CERT_VALIDATION) (list "map" "slice")}}{{.Values.env.ROUTER_CLIENT_CERT_VALIDATION | toJson | quote}}{{else}}{{.Values.env.ROUTER_CLIENT_CERT_VALIDATION | quote}}{{end}}{{else}}""{{end}}
        - name: "ROUTER_FORWARDED_CLIENT_CERT"
          value: {{if ne (typeOf .Values.env.ROUTER_FORWARDED_CLIENT_CERT) "<nil>"}}{{if has (kindOf .Values.env.ROUTER_FORWARDED_CLIENT_CERT) (list "map" "slice")}}{{.Values.env.ROUTER_FORWARDED_CLIENT_CERT | toJson | quote}}{{else}}{{.Values.env.ROUTER_FORWARDED_CLIENT_CERT | quote}}{{end}}{{else}}""{{end}}

        {{- if not .Values.secrets.ROUTER_SERVICES_SECRET }}
        - name: "ROUTER_SERVICES_SECRET"
          valueFrom:
            secretKeyRef:
              key: "router-services-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.ROUTER_SERVICES_SECRET }}
        - name: "ROUTER_SERVICES_SECRET"
          valueFrom:
            secretKeyRef:
              key: "router-services-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.ROUTER_SSL_CERT }}
        - name: "ROUTER_SSL_CERT"
          valueFrom:
            secretKeyRef:
              key: "router-ssl-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.ROUTER_SSL_CERT }}
        - name: "ROUTER_SSL_CERT"
          valueFrom:
            secretKeyRef:
              key: "router-ssl-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.ROUTER_SSL_CERT_KEY }}
        - name: "ROUTER_SSL_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "router-ssl-cert-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.ROUTER_SSL_CERT_KEY }}
        - name: "ROUTER_SSL_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "router-ssl-cert-key"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.ROUTER_STATUS_PASSWORD }}
        - name: "ROUTER_STATUS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "router-status-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.ROUTER_STATUS_PASSWORD }}
        - name: "ROUTER_STATUS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "router-status-password"
              name: "secrets"
        {{- end }}

        - name: "ROUTER_TLS_PEM"
          valueFrom:
            secretKeyRef:
              key: "router-tls-pem"
              name: "secrets"
        - name: "SCF_LOG_HOST"
          value: {{if ne (typeOf .Values.env.SCF_LOG_HOST) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_HOST) (list "map" "slice")}}{{.Values.env.SCF_LOG_HOST | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_HOST | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PORT"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PORT) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PORT) (list "map" "slice")}}{{.Values.env.SCF_LOG_PORT | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PROTOCOL"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PROTOCOL) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PROTOCOL) (list "map" "slice")}}{{.Values.env.SCF_LOG_PROTOCOL | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PROTOCOL | quote}}{{end}}{{else}}{{fail "env.SCF_LOG_PROTOCOL has not been set"}}{{end}}
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"

        {{- if not .Values.secrets.UAA_CLIENTS_GOROUTER_SECRET }}
        - name: "UAA_CLIENTS_GOROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-gorouter-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_GOROUTER_SECRET }}
        - name: "UAA_CLIENTS_GOROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-gorouter-secret"
              name: "secrets"
        {{- end }}

        - name: "UAA_HOST"
          value: {{if ne (typeOf .Values.env.UAA_HOST) "<nil>"}}{{if has (kindOf .Values.env.UAA_HOST) (list "map" "slice")}}{{.Values.env.UAA_HOST | toJson | quote}}{{else}}{{.Values.env.UAA_HOST | quote}}{{end}}{{else}}{{fail "env.UAA_HOST has not been set"}}{{end}}
        - name: "UAA_PORT"
          value: {{if ne (typeOf .Values.env.UAA_PORT) "<nil>"}}{{if has (kindOf .Values.env.UAA_PORT) (list "map" "slice")}}{{.Values.env.UAA_PORT | toJson | quote}}{{else}}{{.Values.env.UAA_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "VCAP_HARD_NPROC"
          value: {{ .Values.kube.limits.nproc.hard | quote }}
        - name: "VCAP_SOFT_NPROC"
          value: {{ .Values.kube.limits.nproc.soft | quote }}
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-router:09321e0d31b46a8e4bd7ef6db212f5e79a048c32"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "router"
        ports:
        - containerPort: 8000
          name: "router"
          protocol: "TCP"
        - containerPort: 443
          name: "router-ssl"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
            - "curl --silent --fail --head http://${HOSTNAME}:8080/health"
        resources:
          requests:
            {{- if and .Values.config.memory.requests .Values.sizing.router.memory.request }}
            memory: "{{ int .Values.sizing.router.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.requests .Values.sizing.router.cpu.request }}
            cpu: "{{ int .Values.sizing.router.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.config.memory.limits .Values.sizing.router.memory.limit }}
            memory: "{{ int .Values.sizing.router.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.limits .Values.sizing.router.cpu.limit }}
            cpu: "{{ int .Values.sizing.router.cpu.limit }}m"
            {{- end }}

        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      - env:
        - name: "AZ_LABEL_NAME"
          value: {{if ne (typeOf .Values.env.AZ_LABEL_NAME) "<nil>"}}{{if has (kindOf .Values.env.AZ_LABEL_NAME) (list "map" "slice")}}{{.Values.env.AZ_LABEL_NAME | toJson | quote}}{{else}}{{.Values.env.AZ_LABEL_NAME | quote}}{{end}}{{else}}""{{end}}
        - name: "CATS_SUITES"
          value: {{if ne (typeOf .Values.env.CATS_SUITES) "<nil>"}}{{if has (kindOf .Values.env.CATS_SUITES) (list "map" "slice")}}{{.Values.env.CATS_SUITES | toJson | quote}}{{else}}{{.Values.env.CATS_SUITES | quote}}{{end}}{{else}}""{{end}}
        - name: "GARDEN_ROOTFS_DRIVER"
          value: {{if ne (typeOf .Values.env.GARDEN_ROOTFS_DRIVER) "<nil>"}}{{if has (kindOf .Values.env.GARDEN_ROOTFS_DRIVER) (list "map" "slice")}}{{.Values.env.GARDEN_ROOTFS_DRIVER | toJson | quote}}{{else}}{{.Values.env.GARDEN_ROOTFS_DRIVER | quote}}{{end}}{{else}}{{fail "env.GARDEN_ROOTFS_DRIVER has not been set"}}{{end}}

        {{- if not .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        {{- end }}

        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: {{if ne (typeOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) (list "map" "slice")}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | toJson | quote}}{{else}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | quote}}{{end}}{{else}}""{{end}}
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"

        {{- if not .Values.secrets.LOGGREGATOR_AGENT_CERT }}
        - name: "LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.LOGGREGATOR_AGENT_CERT }}
        - name: "LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.LOGGREGATOR_AGENT_CERT_KEY }}
        - name: "LOGGREGATOR_AGENT_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.LOGGREGATOR_AGENT_CERT_KEY }}
        - name: "LOGGREGATOR_AGENT_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert-key"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.LOGGREGATOR_FORWARD_CERT }}
        - name: "LOGGREGATOR_FORWARD_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.LOGGREGATOR_FORWARD_CERT }}
        - name: "LOGGREGATOR_FORWARD_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.LOGGREGATOR_FORWARD_CERT_KEY }}
        - name: "LOGGREGATOR_FORWARD_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert-key"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.LOGGREGATOR_FORWARD_CERT_KEY }}
        - name: "LOGGREGATOR_FORWARD_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-forward-cert-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "PZ_LABEL_NAME"
          value: {{if ne (typeOf .Values.env.PZ_LABEL_NAME) "<nil>"}}{{if has (kindOf .Values.env.PZ_LABEL_NAME) (list "map" "slice")}}{{.Values.env.PZ_LABEL_NAME | toJson | quote}}{{else}}{{.Values.env.PZ_LABEL_NAME | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_HOST"
          value: {{if ne (typeOf .Values.env.SCF_LOG_HOST) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_HOST) (list "map" "slice")}}{{.Values.env.SCF_LOG_HOST | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_HOST | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PORT"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PORT) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PORT) (list "map" "slice")}}{{.Values.env.SCF_LOG_PORT | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PROTOCOL"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PROTOCOL) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PROTOCOL) (list "map" "slice")}}{{.Values.env.SCF_LOG_PROTOCOL | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PROTOCOL | quote}}{{end}}{{else}}{{fail "env.SCF_LOG_PROTOCOL has not been set"}}{{end}}
        - name: "VCAP_HARD_NPROC"
          value: {{ .Values.kube.limits.nproc.hard | quote }}
        - name: "VCAP_SOFT_NPROC"
          value: {{ .Values.kube.limits.nproc.soft | quote }}
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-loggregator-agent:39c7e06aaa613d8d7ae5ac05dc952c5d1cf1be17"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "loggregator-agent"
        ports: ~
        readinessProbe: ~
        resources:
          requests:
            {{- if and .Values.config.memory.requests .Values.sizing.loggregator_agent.memory.request }}
            memory: "{{ int .Values.sizing.loggregator_agent.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.requests .Values.sizing.loggregator_agent.cpu.request }}
            cpu: "{{ int .Values.sizing.loggregator_agent.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.config.memory.limits .Values.sizing.loggregator_agent.memory.limit }}
            memory: "{{ int .Values.sizing.loggregator_agent.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.limits .Values.sizing.loggregator_agent.cpu.limit }}
            cpu: "{{ int .Values.sizing.loggregator_agent.cpu.limit }}m"
            {{- end }}

        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      {{- if and (eq (printf "%s" .Values.kube.auth) "rbac") (.Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1") }}
      serviceAccountName: "privileged"
      {{- end }}
      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
  {{- if or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (.Capabilities.KubeVersion.Minor | trimSuffix "+" | int) 7)) }}
  updateStrategy:
    type: "RollingUpdate"
  {{- end }}
