---
{{- if .Values.enable.uaa }}
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "uaa-set"
    labels:
      app.kubernetes.io/component: "uaa-set"
      skiff-role-name: "uaa-set"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
      app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
      helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
      {{- if .Values.config.use_istio }}
      app: "uaa-set"
      {{- end }}
  spec:
    clusterIP: "None"
    ports:
    - name: "uaa"
      port: 8080
      protocol: "TCP"
      targetPort: 0
    - name: "uaa-ssl"
      port: 2793
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "uaa"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "uaa-uaa-set"
    labels:
      app.kubernetes.io/component: "uaa-uaa-set"
      skiff-role-name: "uaa-uaa-set"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
      app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
      helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
      {{- if .Values.config.use_istio }}
      app: "uaa-uaa-set"
      {{- end }}
  spec:
    clusterIP: "None"
    ports:
    - name: "uaa"
      port: 8080
      protocol: "TCP"
      targetPort: 0
    - name: "uaa-ssl"
      port: 2793
      protocol: "TCP"
      targetPort: 0
    selector:
      app.kubernetes.io/component: "uaa"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "uaa-uaa"
    labels:
      app.kubernetes.io/component: "uaa-uaa"
      skiff-role-name: "uaa-uaa"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
      app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
      helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
      {{- if .Values.config.use_istio }}
      app: "uaa-uaa"
      {{- end }}
  spec:
    ports:
    - name: "uaa"
      port: 8080
      protocol: "TCP"
      targetPort: 8080
    - name: "uaa-ssl"
      port: 2793
      protocol: "TCP"
      targetPort: 8443
    selector:
      app.kubernetes.io/component: "uaa"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "uaa-uaa-public"
    labels:
      app.kubernetes.io/component: "uaa-uaa-public"
      skiff-role-name: "uaa-uaa-public"
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
      app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
      app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
      app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
      helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}
      {{- if .Values.config.use_istio }}
      app: "uaa-uaa-public"
      {{- end }}
  spec:
    {{- if not (or .Values.services.loadbalanced .Values.ingress.enabled) }}
    externalIPs: {{ .Values.kube.external_ips | toJson }}
    {{- end }}

    ports:
    - name: "uaa-ssl"
      port: 2793
      protocol: "TCP"
      targetPort: 8443
    selector:
      app.kubernetes.io/component: "uaa"

    {{- if .Values.services.loadbalanced }}
    type: "LoadBalancer"
    {{- end }}

  {{- if and .Values.services.loadbalanced .Values.ingress.enabled }}
  _incompatible: {{ fail "services.loadbalanced and ingress.enabled cannot both be set" }}
  {{- end }}
kind: "List"
{{- end }}
---
# The uaa instance group contains the following jobs:
#
# - global-uaa-properties: Dummy BOSH job used to host global parameters that
#   are required to configure SCF / fissile
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - uaa: The UAA is the identity management service for Cloud Foundry. It's
#   primary role is as an OAuth2 provider, issuing tokens for client
#   applications to use when they act on behalf of Cloud Foundry users. It can
#   also authenticate users with their Cloud Foundry credentials, and can act as
#   an SSO service using those credentials (or others). It has endpoints for
#   managing user accounts and for registering OAuth2 clients, as well as
#   various other management functions.
#
# - wait-for-database: This is a pre-start job to delay starting the rest of the
#   role until a database connection is ready. Currently it only checks that a
#   response can be obtained from the server, and not that it responds
#   intelligently.
#
#
# Also: bpm
{{- if .Values.enable.uaa }}

{{- if and (ne (typeOf .Values.sizing.uaa.count) "<nil>") (gt (int .Values.sizing.uaa.count) 65535) }}
_maxReplicas: {{ fail "uaa cannot have more than 65535 instances" }}
{{- end }}

{{- if and .Values.config.HA .Values.config.HA_strict (ne (typeOf .Values.sizing.uaa.count) "<nil>") (lt (int .Values.sizing.uaa.count) 2) }}
_minHAReplicas: {{ fail "uaa must have at least 2 instances for HA" }}
{{- end }}

{{- if and (ne (typeOf .Values.sizing.uaa.count) "<nil>") (lt (int .Values.sizing.uaa.count) 1) }}
_minReplicas: {{ fail "uaa must have at least 1 instances" }}
{{- end }}

{{- if .Values.sizing.HA }}
_moved_sizing_HA: {{ fail "Bad use of moved variable sizing.HA. The new name to use is config.HA" }}
{{- end }}

{{- if .Values.sizing.cpu }}
_moved_sizing_cpu_limits: {{ if .Values.sizing.cpu.limits }} {{ fail "Bad use of moved variable sizing.cpu.limits. The new name to use is config.cpu.limits" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.cpu }}
_moved_sizing_cpu_requests: {{ if .Values.sizing.cpu.requests }} {{ fail "Bad use of moved variable sizing.cpu.requests. The new name to use is config.cpu.requests" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.memory }}
_moved_sizing_memory_limits: {{ if .Values.sizing.memory.limits }} {{ fail "Bad use of moved variable sizing.memory.limits. The new name to use is config.memory.limits" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.memory }}
_moved_sizing_memory_requests: {{ if .Values.sizing.memory.requests }} {{ fail "Bad use of moved variable sizing.memory.requests. The new name to use is config.memory.requests" }} {{else}} ok {{end}}
{{- end }}

apiVersion: {{ if (.Capabilities.APIVersions.Has "apps/v1") }}apps/v1{{ else }}apps/v1beta1{{ end }}
kind: "StatefulSet"
metadata:
  name: "uaa"
  labels:
    app.kubernetes.io/component: "uaa"
    skiff-role-name: "uaa"
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}

    {{- if .Values.config.use_istio }}
    app: "uaa"
    {{- end }}

    {{- if .Values.config.use_istio }}
    version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    {{- end }}

spec:
  podManagementPolicy: "OrderedReady"
  replicas: {{ if (ne (typeOf .Values.sizing.uaa.count) "<nil>") }}{{ .Values.sizing.uaa.count }}{{ else }}{{ if .Values.config.HA }}{{ 2 }}{{ else }}{{ 1 }}{{ end }}{{ end }}
  selector:
    matchLabels:
      skiff-role-name: "uaa"
  serviceName: "uaa-set"
  template:
    metadata:
      name: "uaa"
      labels:
        app.kubernetes.io/component: "uaa"
        skiff-role-name: "uaa"
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/name: {{ default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" | quote }}
        app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
        helm.sh/chart: {{ printf "%s-%s" .Chart.Name (.Chart.Version | replace "+" "_") | quote }}

        {{- if .Values.config.use_istio }}
        app: "uaa"
        {{- end }}

        {{- if .Values.config.use_istio }}
        version: {{ default .Chart.Version .Chart.AppVersion | quote }}
        {{- end }}

      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.config.use_istio }}
        sidecar.istio.io/inject: "false"
        {{- end }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/component"
                  operator: "In"
                  values:
                  - "uaa"
              topologyKey: {{if eq (typeOf .Values.kube.podAntiAffinityTopologyKey) "<nil>"}}kubernetes.io/hostname{{else}}{{.Values.kube.podAntiAffinityTopologyKey}}{{end}}
            weight: 100
        {{- if .Values.sizing.uaa.affinity.nodeAffinity }}
        nodeAffinity: {{ toJson .Values.sizing.uaa.affinity.nodeAffinity }}
        {{- end }}
      containers:
      {{- if .Values.enable.uaa }}
      - env:
        - name: "AEK_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "aek-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"

        {{- if not .Values.secrets.AUTOSCALER_UAA_CLIENT_SECRET }}
        - name: "AUTOSCALER_UAA_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "autoscaler-uaa-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.AUTOSCALER_UAA_CLIENT_SECRET }}
        - name: "AUTOSCALER_UAA_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "autoscaler-uaa-client-secret"
              name: "secrets"
        {{- end }}

        - name: "AZ_LABEL_NAME"
          value: {{if ne (typeOf .Values.env.AZ_LABEL_NAME) "<nil>"}}{{if has (kindOf .Values.env.AZ_LABEL_NAME) (list "map" "slice")}}{{.Values.env.AZ_LABEL_NAME | toJson | quote}}{{else}}{{.Values.env.AZ_LABEL_NAME | quote}}{{end}}{{else}}""{{end}}
        - name: "CATS_SUITES"
          value: {{if ne (typeOf .Values.env.CATS_SUITES) "<nil>"}}{{if has (kindOf .Values.env.CATS_SUITES) (list "map" "slice")}}{{.Values.env.CATS_SUITES | toJson | quote}}{{else}}{{.Values.env.CATS_SUITES | quote}}{{end}}{{else}}""{{end}}
        - name: "CLUSTER_ADMIN_AUTHORITIES"
          value: {{if ne (typeOf .Values.env.CLUSTER_ADMIN_AUTHORITIES) "<nil>"}}{{if has (kindOf .Values.env.CLUSTER_ADMIN_AUTHORITIES) (list "map" "slice")}}{{.Values.env.CLUSTER_ADMIN_AUTHORITIES | toJson | quote}}{{else}}{{.Values.env.CLUSTER_ADMIN_AUTHORITIES | quote}}{{end}}{{else}}{{fail "env.CLUSTER_ADMIN_AUTHORITIES has not been set"}}{{end}}
        - name: "CLUSTER_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "cluster-admin-password"
              name: "secrets"
        - name: "CONFIGGIN_IMPORT_ROUTER"
          valueFrom:
            secretKeyRef:
              name: "router"
              key: {{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}
        - name: "CONFIGGIN_SA_TOKEN"
          valueFrom:
            secretKeyRef:
              name: "configgin"
              key: "token"
        - name: "CONFIGGIN_VERSION_TAG"
          value: {{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}
        - name: "DB_EXTERNAL_HOST"
          value: {{if ne (typeOf .Values.env.DB_EXTERNAL_HOST) "<nil>"}}{{if has (kindOf .Values.env.DB_EXTERNAL_HOST) (list "map" "slice")}}{{.Values.env.DB_EXTERNAL_HOST | toJson | quote}}{{else}}{{.Values.env.DB_EXTERNAL_HOST | quote}}{{end}}{{else}}""{{end}}
        - name: "DB_EXTERNAL_PORT"
          value: {{if ne (typeOf .Values.env.DB_EXTERNAL_PORT) "<nil>"}}{{if has (kindOf .Values.env.DB_EXTERNAL_PORT) (list "map" "slice")}}{{.Values.env.DB_EXTERNAL_PORT | toJson | quote}}{{else}}{{.Values.env.DB_EXTERNAL_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "DB_EXTERNAL_USER_HOST_SUFFIX"
          value: {{if ne (typeOf .Values.env.DB_EXTERNAL_USER_HOST_SUFFIX) "<nil>"}}{{if has (kindOf .Values.env.DB_EXTERNAL_USER_HOST_SUFFIX) (list "map" "slice")}}{{.Values.env.DB_EXTERNAL_USER_HOST_SUFFIX | toJson | quote}}{{else}}{{.Values.env.DB_EXTERNAL_USER_HOST_SUFFIX | quote}}{{end}}{{else}}""{{end}}
        - name: "DOMAIN"
          value: {{if ne (typeOf .Values.env.DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.DOMAIN) (list "map" "slice")}}{{.Values.env.DOMAIN | toJson | quote}}{{else}}{{.Values.env.DOMAIN | quote}}{{end}}{{else}}{{fail "env.DOMAIN has not been set"}}{{end}}
        - name: "GARDEN_ROOTFS_DRIVER"
          value: {{if ne (typeOf .Values.env.GARDEN_ROOTFS_DRIVER) "<nil>"}}{{if has (kindOf .Values.env.GARDEN_ROOTFS_DRIVER) (list "map" "slice")}}{{.Values.env.GARDEN_ROOTFS_DRIVER | toJson | quote}}{{else}}{{.Values.env.GARDEN_ROOTFS_DRIVER | quote}}{{end}}{{else}}{{fail "env.GARDEN_ROOTFS_DRIVER has not been set"}}{{end}}

        {{- if not .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.INTERNAL_CA_CERT_KEY }}
        - name: "INTERNAL_CA_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT_KEY }}
        - name: "INTERNAL_CA_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert-key"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.JWT_SIGNING_CERT }}
        - name: "JWT_SIGNING_CERT"
          valueFrom:
            secretKeyRef:
              key: "jwt-signing-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.JWT_SIGNING_CERT }}
        - name: "JWT_SIGNING_CERT"
          valueFrom:
            secretKeyRef:
              key: "jwt-signing-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.JWT_SIGNING_CERT_KEY }}
        - name: "JWT_SIGNING_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "jwt-signing-cert-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.JWT_SIGNING_CERT_KEY }}
        - name: "JWT_SIGNING_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "jwt-signing-cert-key"
              name: "secrets"
        {{- end }}

        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: {{if ne (typeOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) (list "map" "slice")}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | toJson | quote}}{{else}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | quote}}{{end}}{{else}}""{{end}}
        - name: "KUBERNETES_CONTAINER_NAME"
          value: "uaa"
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "LOG_LEVEL"
          value: {{if ne (typeOf .Values.env.LOG_LEVEL) "<nil>"}}{{if has (kindOf .Values.env.LOG_LEVEL) (list "map" "slice")}}{{.Values.env.LOG_LEVEL | toJson | quote}}{{else}}{{.Values.env.LOG_LEVEL | quote}}{{end}}{{else}}{{fail "env.LOG_LEVEL has not been set"}}{{end}}

        {{- if not .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        {{- end }}

        - name: "PZ_LABEL_NAME"
          value: {{if ne (typeOf .Values.env.PZ_LABEL_NAME) "<nil>"}}{{if has (kindOf .Values.env.PZ_LABEL_NAME) (list "map" "slice")}}{{.Values.env.PZ_LABEL_NAME | toJson | quote}}{{else}}{{.Values.env.PZ_LABEL_NAME | quote}}{{end}}{{else}}""{{end}}

        {{- if .Values.secrets.SAML_SERVICEPROVIDER_CERT }}
        - name: "SAML_SERVICEPROVIDER_CERT"
          valueFrom:
            secretKeyRef:
              key: "saml-serviceprovider-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.SAML_SERVICEPROVIDER_CERT }}
        - name: "SAML_SERVICEPROVIDER_CERT"
          valueFrom:
            secretKeyRef:
              key: "saml-serviceprovider-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.SAML_SERVICEPROVIDER_CERT_KEY }}
        - name: "SAML_SERVICEPROVIDER_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "saml-serviceprovider-cert-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.SAML_SERVICEPROVIDER_CERT_KEY }}
        - name: "SAML_SERVICEPROVIDER_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "saml-serviceprovider-cert-key"
              name: "secrets"
        {{- end }}

        - name: "SCF_LOG_HOST"
          value: {{if ne (typeOf .Values.env.SCF_LOG_HOST) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_HOST) (list "map" "slice")}}{{.Values.env.SCF_LOG_HOST | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_HOST | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PORT"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PORT) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PORT) (list "map" "slice")}}{{.Values.env.SCF_LOG_PORT | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PROTOCOL"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PROTOCOL) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PROTOCOL) (list "map" "slice")}}{{.Values.env.SCF_LOG_PROTOCOL | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PROTOCOL | quote}}{{end}}{{else}}{{fail "env.SCF_LOG_PROTOCOL has not been set"}}{{end}}
        - name: "SMTP_AUTH"
          value: {{if ne (typeOf .Values.env.SMTP_AUTH) "<nil>"}}{{if has (kindOf .Values.env.SMTP_AUTH) (list "map" "slice")}}{{.Values.env.SMTP_AUTH | toJson | quote}}{{else}}{{.Values.env.SMTP_AUTH | quote}}{{end}}{{else}}""{{end}}
        - name: "SMTP_FROM_ADDRESS"
          value: {{if ne (typeOf .Values.env.SMTP_FROM_ADDRESS) "<nil>"}}{{if has (kindOf .Values.env.SMTP_FROM_ADDRESS) (list "map" "slice")}}{{.Values.env.SMTP_FROM_ADDRESS | toJson | quote}}{{else}}{{.Values.env.SMTP_FROM_ADDRESS | quote}}{{end}}{{else}}""{{end}}
        - name: "SMTP_HOST"
          value: {{if ne (typeOf .Values.env.SMTP_HOST) "<nil>"}}{{if has (kindOf .Values.env.SMTP_HOST) (list "map" "slice")}}{{.Values.env.SMTP_HOST | toJson | quote}}{{else}}{{.Values.env.SMTP_HOST | quote}}{{end}}{{else}}""{{end}}
        - name: "SMTP_PASSWORD"
          value: {{if ne (typeOf .Values.env.SMTP_PASSWORD) "<nil>"}}{{if has (kindOf .Values.env.SMTP_PASSWORD) (list "map" "slice")}}{{.Values.env.SMTP_PASSWORD | toJson | quote}}{{else}}{{.Values.env.SMTP_PASSWORD | quote}}{{end}}{{else}}""{{end}}
        - name: "SMTP_PORT"
          value: {{if ne (typeOf .Values.env.SMTP_PORT) "<nil>"}}{{if has (kindOf .Values.env.SMTP_PORT) (list "map" "slice")}}{{.Values.env.SMTP_PORT | toJson | quote}}{{else}}{{.Values.env.SMTP_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "SMTP_STARTTLS"
          value: {{if ne (typeOf .Values.env.SMTP_STARTTLS) "<nil>"}}{{if has (kindOf .Values.env.SMTP_STARTTLS) (list "map" "slice")}}{{.Values.env.SMTP_STARTTLS | toJson | quote}}{{else}}{{.Values.env.SMTP_STARTTLS | quote}}{{end}}{{else}}""{{end}}
        - name: "SMTP_USER"
          value: {{if ne (typeOf .Values.env.SMTP_USER) "<nil>"}}{{if has (kindOf .Values.env.SMTP_USER) (list "map" "slice")}}{{.Values.env.SMTP_USER | toJson | quote}}{{else}}{{.Values.env.SMTP_USER | quote}}{{end}}{{else}}""{{end}}

        {{- if not .Values.secrets.UAADB_PASSWORD }}
        - name: "UAADB_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "uaadb-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAADB_PASSWORD }}
        - name: "UAADB_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "uaadb-password"
              name: "secrets"
        {{- end }}

        - name: "UAADB_TLS"
          value: {{if ne (typeOf .Values.env.UAADB_TLS) "<nil>"}}{{if has (kindOf .Values.env.UAADB_TLS) (list "map" "slice")}}{{.Values.env.UAADB_TLS | toJson | quote}}{{else}}{{.Values.env.UAADB_TLS | quote}}{{end}}{{else}}""{{end}}
        - name: "UAA_ADMIN_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-admin-client-secret"
              name: "secrets"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"

        {{- if .Values.secrets.UAA_CLIENTS_CC_ROUTING_SECRET }}
        - name: "UAA_CLIENTS_CC_ROUTING_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-routing-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CC_ROUTING_SECRET }}
        - name: "UAA_CLIENTS_CC_ROUTING_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-routing-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-dashboards-client-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-dashboards-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-key-client-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-key-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CF_SMOKE_TESTS_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CF_SMOKE_TESTS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cf-smoke-tests-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CF_SMOKE_TESTS_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CF_SMOKE_TESTS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cf-smoke-tests-client-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CF_USB_SECRET }}
        - name: "UAA_CLIENTS_CF_USB_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cf-usb-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CF_USB_SECRET }}
        - name: "UAA_CLIENTS_CF_USB_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cf-usb-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET }}
        - name: "UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cloud-controller-username-lookup-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET }}
        - name: "UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cloud-controller-username-lookup-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CREDHUB_USER_CLI_SECRET }}
        - name: "UAA_CLIENTS_CREDHUB_USER_CLI_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-credhub-user-cli-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CREDHUB_USER_CLI_SECRET }}
        - name: "UAA_CLIENTS_CREDHUB_USER_CLI_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-credhub-user-cli-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET }}
        - name: "UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-diego-ssh-proxy-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET }}
        - name: "UAA_CLIENTS_DIEGO_SSH_PROXY_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-diego-ssh-proxy-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_DOPPLER_SECRET }}
        - name: "UAA_CLIENTS_DOPPLER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-doppler-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_DOPPLER_SECRET }}
        - name: "UAA_CLIENTS_DOPPLER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-doppler-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_GOROUTER_SECRET }}
        - name: "UAA_CLIENTS_GOROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-gorouter-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_GOROUTER_SECRET }}
        - name: "UAA_CLIENTS_GOROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-gorouter-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_ROUTING_API_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_ROUTING_API_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-routing-api-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_ROUTING_API_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_ROUTING_API_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-routing-api-client-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET }}
        - name: "UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-scf-auto-config-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET }}
        - name: "UAA_CLIENTS_SCF_AUTO_CONFIG_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-scf-auto-config-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_TCP_EMITTER_SECRET }}
        - name: "UAA_CLIENTS_TCP_EMITTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-emitter-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_TCP_EMITTER_SECRET }}
        - name: "UAA_CLIENTS_TCP_EMITTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-emitter-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_TCP_ROUTER_SECRET }}
        - name: "UAA_CLIENTS_TCP_ROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-router-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_TCP_ROUTER_SECRET }}
        - name: "UAA_CLIENTS_TCP_ROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-tcp-router-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "UAA_HOST"
          value: {{if ne (typeOf .Values.env.UAA_HOST) "<nil>"}}{{if has (kindOf .Values.env.UAA_HOST) (list "map" "slice")}}{{.Values.env.UAA_HOST | toJson | quote}}{{else}}{{.Values.env.UAA_HOST | quote}}{{end}}{{else}}{{fail "env.UAA_HOST has not been set"}}{{end}}
        - name: "UAA_PORT"
          value: {{if ne (typeOf .Values.env.UAA_PORT) "<nil>"}}{{if has (kindOf .Values.env.UAA_PORT) (list "map" "slice")}}{{.Values.env.UAA_PORT | toJson | quote}}{{else}}{{.Values.env.UAA_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "UAA_PUBLIC_PORT"
          value: {{if ne (typeOf .Values.env.UAA_PUBLIC_PORT) "<nil>"}}{{if has (kindOf .Values.env.UAA_PUBLIC_PORT) (list "map" "slice")}}{{.Values.env.UAA_PUBLIC_PORT | toJson | quote}}{{else}}{{.Values.env.UAA_PUBLIC_PORT | quote}}{{end}}{{else}}""{{end}}

        {{- if .Values.secrets.UAA_SERVER_CERT }}
        - name: "UAA_SERVER_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-server-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_SERVER_CERT }}
        - name: "UAA_SERVER_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-server-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_SERVER_CERT_KEY }}
        - name: "UAA_SERVER_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "uaa-server-cert-key"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_SERVER_CERT_KEY }}
        - name: "UAA_SERVER_CERT_KEY"
          valueFrom:
            secretKeyRef:
              key: "uaa-server-cert-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "VCAP_HARD_NPROC"
          value: {{ .Values.kube.limits.nproc.hard | quote }}
        - name: "VCAP_SOFT_NPROC"
          value: {{ .Values.kube.limits.nproc.soft | quote }}
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-uaa:c2c5e587774a14e04c429288d10b9a84a42d48c4"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "uaa"
        ports:
        - containerPort: 8080
          name: "uaa"
          protocol: "TCP"
        - containerPort: 8443
          name: "uaa-ssl"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
            - "curl --resolve uaa.${DOMAIN}:8443:$(getent hosts ${HOSTNAME} | awk '{ print $1 }') --fail -H \\\"Host: uaa.${DOMAIN}\\\" -H 'Accept: application/json' https://uaa.${DOMAIN}:8443/info\n"
        resources:
          requests:
            {{- if and .Values.config.memory.requests .Values.sizing.uaa.memory.request }}
            memory: "{{ int .Values.sizing.uaa.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.requests .Values.sizing.uaa.cpu.request }}
            cpu: "{{ int .Values.sizing.uaa.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.config.memory.limits .Values.sizing.uaa.memory.limit }}
            memory: "{{ int .Values.sizing.uaa.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.limits .Values.sizing.uaa.cpu.limit }}
            cpu: "{{ int .Values.sizing.uaa.cpu.limit }}m"
            {{- end }}

        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - "AUDIT_WRITE"
          privileged: true
        volumeMounts:
        - mountPath: "/opt/fissile/config"
          name: "deployment-manifest"
          readOnly: true
      {{- end }}
      dnsPolicy: "ClusterFirst"

      {{- if ne .Values.kube.registry.username "" }}
      imagePullSecrets:
      - name: "registry-credentials"
      {{- end }}

      restartPolicy: "Always"

      {{- if and (eq (printf "%s" .Values.kube.auth) "rbac") (.Capabilities.APIVersions.Has "rbac.authorization.k8s.io/v1") }}
      serviceAccountName: "default"
      {{- end }}

      terminationGracePeriodSeconds: 600
      volumes:
      - name: "deployment-manifest"
        secret:
          secretName: "deployment-manifest"
          items:
          - key: "deployment-manifest"
            path: "deployment-manifest.yml"
  {{- if or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (.Capabilities.KubeVersion.Minor | trimSuffix "+" | int) 7)) }}
  updateStrategy:
    type: "RollingUpdate"
  {{- end }}
{{- end }}
