---
# The cc-uploader role contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# Also: tps, cc_uploader, metron_agent

{{- if gt (int .Values.sizing.cc_uploader.count) 3 }}
_maxReplicas: {{ fail "cc_uploader cannot have more than 3 instances" }}
{{- end }}

{{- if and .Values.sizing.HA (and (ne (int .Values.sizing.cc_uploader.count) 1) (lt (int .Values.sizing.cc_uploader.count) 2)) }}
_minHAReplicas: {{ fail "cc_uploader must have at least 2 instances for HA" }}
{{- end }}

{{- if lt (int .Values.sizing.cc_uploader.count) 1 }}
_minReplicas: {{ fail "cc_uploader must have at least 1 instances" }}
{{- end }}

apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "cc-uploader"
  labels:
    skiff-role-name: "cc-uploader"
spec:
  replicas: {{ if and .Values.sizing.HA (eq (int .Values.sizing.cc_uploader.count) 1) -}} 2 {{- else -}} {{ .Values.sizing.cc_uploader.count }} {{- end }}
  selector:
    matchLabels:
      skiff-role-name: "cc-uploader"
  template:
    metadata:
      name: "cc-uploader"
      labels:
        skiff-role-name: "cc-uploader"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if not (or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (.Capabilities.KubeVersion.Minor | trimSuffix "+" | int) 6))) }}
        scheduler.alpha.kubernetes.io/affinity: "{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"skiff-role-name\",\"operator\":\"In\",\"values\":[\"cc-uploader\"]}]},\"topologyKey\":\"beta.kubernetes.io/os\"},\"weight\":100}]}}"
        {{- end }}
    spec:
      {{- if or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (.Capabilities.KubeVersion.Minor | trimSuffix "+" | int) 6)) }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "skiff-role-name"
                  operator: "In"
                  values:
                  - "cc-uploader"
              topologyKey: "beta.kubernetes.io/os"
            weight: 100
        {{- if .Values.sizing.cc_uploader.affinity.nodeAffinity }}
        nodeAffinity: {{ toJson .Values.sizing.cc_uploader.affinity.nodeAffinity }}
        {{- end }}
      {{- end }}
      containers:
      - env:
        {{- if not .Values.secrets.BBS_CLIENT_CRT }}
        - name: "BBS_CLIENT_CRT"
          valueFrom:
            secretKeyRef:
              key: "bbs-client-crt"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.BBS_CLIENT_CRT }}
        - name: "BBS_CLIENT_CRT"
          valueFrom:
            secretKeyRef:
              key: "bbs-client-crt"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.BBS_CLIENT_KEY }}
        - name: "BBS_CLIENT_KEY"
          valueFrom:
            secretKeyRef:
              key: "bbs-client-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.BBS_CLIENT_KEY }}
        - name: "BBS_CLIENT_KEY"
          valueFrom:
            secretKeyRef:
              key: "bbs-client-key"
              name: "secrets"
        {{- end }}

        - name: "CATS_SUITES"
          value: {{ .Values.env.CATS_SUITES | quote }}

        {{- if not .Values.secrets.CC_SERVER_CRT }}
        - name: "CC_SERVER_CRT"
          valueFrom:
            secretKeyRef:
              key: "cc-server-crt"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.CC_SERVER_CRT }}
        - name: "CC_SERVER_CRT"
          valueFrom:
            secretKeyRef:
              key: "cc-server-crt"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.CC_SERVER_KEY }}
        - name: "CC_SERVER_KEY"
          valueFrom:
            secretKeyRef:
              key: "cc-server-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.CC_SERVER_KEY }}
        - name: "CC_SERVER_KEY"
          valueFrom:
            secretKeyRef:
              key: "cc-server-key"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.CC_UPLOADER_CRT }}
        - name: "CC_UPLOADER_CRT"
          valueFrom:
            secretKeyRef:
              key: "cc-uploader-crt"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.CC_UPLOADER_CRT }}
        - name: "CC_UPLOADER_CRT"
          valueFrom:
            secretKeyRef:
              key: "cc-uploader-crt"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.CC_UPLOADER_KEY }}
        - name: "CC_UPLOADER_KEY"
          valueFrom:
            secretKeyRef:
              key: "cc-uploader-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.CC_UPLOADER_KEY }}
        - name: "CC_UPLOADER_KEY"
          valueFrom:
            secretKeyRef:
              key: "cc-uploader-key"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.INTERNAL_CA_KEY }}
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_KEY }}
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secrets"
        {{- end }}

        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "KUBE_SERVICE_DOMAIN_SUFFIX"
          value: {{ .Values.env.KUBE_SERVICE_DOMAIN_SUFFIX | quote }}
        - name: "LOG_LEVEL"
          value: {{ required "LOG_LEVEL configuration missing" .Values.env.LOG_LEVEL | quote }}

        {{- if .Values.secrets.METRON_CERT }}
        - name: "METRON_CERT"
          valueFrom:
            secretKeyRef:
              key: "metron-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.METRON_CERT }}
        - name: "METRON_CERT"
          valueFrom:
            secretKeyRef:
              key: "metron-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.METRON_KEY }}
        - name: "METRON_KEY"
          valueFrom:
            secretKeyRef:
              key: "metron-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.METRON_KEY }}
        - name: "METRON_KEY"
          valueFrom:
            secretKeyRef:
              key: "metron-key"
              name: "secrets"
        {{- end }}

        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        - name: "SCF_LOG_HOST"
          value: {{ .Values.env.SCF_LOG_HOST | quote }}
        - name: "SCF_LOG_PORT"
          value: {{ .Values.env.SCF_LOG_PORT | quote }}
        - name: "SCF_LOG_PROTOCOL"
          value: {{ required "SCF_LOG_PROTOCOL configuration missing" .Values.env.SCF_LOG_PROTOCOL | quote }}

        {{- if not .Values.secrets.TPS_CC_CLIENT_CRT }}
        - name: "TPS_CC_CLIENT_CRT"
          valueFrom:
            secretKeyRef:
              key: "tps-cc-client-crt"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.TPS_CC_CLIENT_CRT }}
        - name: "TPS_CC_CLIENT_CRT"
          valueFrom:
            secretKeyRef:
              key: "tps-cc-client-crt"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.TPS_CC_CLIENT_KEY }}
        - name: "TPS_CC_CLIENT_KEY"
          valueFrom:
            secretKeyRef:
              key: "tps-cc-client-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.TPS_CC_CLIENT_KEY }}
        - name: "TPS_CC_CLIENT_KEY"
          valueFrom:
            secretKeyRef:
              key: "tps-cc-client-key"
              name: "secrets"
        {{- end }}

        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-cc-uploader:a308a9dacf2a166ddc5b2ddc9ace0c79586b8fec"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "cc-uploader"
        ports:
        - containerPort: 9091
          name: "cc-up-listen"
          protocol: "TCP"
        - containerPort: 17018
          name: "cc-up-dbg"
          protocol: "TCP"
        readinessProbe:
          tcpSocket:
            port: 9091
        resources:
          requests:
            {{- if and .Values.sizing.memory.requests .Values.sizing.cc_uploader.memory.request }}
            memory: "{{ int .Values.sizing.cc_uploader.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.sizing.cpu.requests .Values.sizing.cc_uploader.cpu.request }}
            cpu: "{{ int .Values.sizing.cc_uploader.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.sizing.memory.limits .Values.sizing.cc_uploader.memory.limit }}
            memory: "{{ int .Values.sizing.cc_uploader.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.sizing.cpu.limits .Values.sizing.cc_uploader.cpu.limit }}
            cpu: "{{ int .Values.sizing.cc_uploader.cpu.limit }}m"
            {{- end }}

        securityContext: ~
        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 600
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "cc-uploader"
  spec:
    ports:
    - name: "cc-up-listen"
      port: 9091
      protocol: "TCP"
      targetPort: "cc-up-listen"
    - name: "cc-up-dbg"
      port: 17018
      protocol: "TCP"
      targetPort: "cc-up-dbg"
    selector:
      skiff-role-name: "cc-uploader"
    type: {{ if .Values.services.loadbalanced }} LoadBalancer {{ else }} ClusterIP {{ end }}
kind: "List"
