---
# The api role contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - patch-properties: Dummy BOSH job used to host parameters that are used in
#   SCF patches for upstream bugs
#
# - cloud_controller_ng: The Cloud Controller provides primary Cloud Foundry API
#   that is by the CF CLI. The Cloud Controller uses a database to keep tables
#   for organizations, spaces, apps, services, service instances, user roles,
#   and more. Typically multiple instances of Cloud Controller are load
#   balanced.
#
# - route_registrar: Used for registering routes
#
# Also: metron_agent, statsd_injector, go-buildpack, binary-buildpack,
# nodejs-buildpack, ruby-buildpack, php-buildpack, python-buildpack,
# staticfile-buildpack, java-buildpack, dotnet-core-buildpack

{{- if gt (int .Values.sizing.api.count) 65535 }}
_maxReplicas: {{ fail "api cannot have more than 65535 instances" }}
{{- end }}

{{- if and .Values.config.HA (and (ne (int .Values.sizing.api.count) 1) (lt (int .Values.sizing.api.count) 2)) }}
_minHAReplicas: {{ fail "api must have at least 2 instances for HA" }}
{{- end }}

{{- if lt (int .Values.sizing.api.count) 1 }}
_minReplicas: {{ fail "api must have at least 1 instances" }}
{{- end }}

{{- if .Values.sizing.HA }}
_moved_sizing_HA: {{ fail "Bad use of moved variable sizing.HA. The new name to use is config.HA" }}
{{- end }}

{{- if .Values.sizing.cpu }}
_moved_sizing_cpu_limits: {{ if .Values.sizing.cpu.limits }} {{ fail "Bad use of moved variable sizing.cpu.limits. The new name to use is config.cpu.limits" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.cpu }}
_moved_sizing_cpu_requests: {{ if .Values.sizing.cpu.requests }} {{ fail "Bad use of moved variable sizing.cpu.requests. The new name to use is config.cpu.requests" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.memory }}
_moved_sizing_memory_limits: {{ if .Values.sizing.memory.limits }} {{ fail "Bad use of moved variable sizing.memory.limits. The new name to use is config.memory.limits" }} {{else}} ok {{end}}
{{- end }}

{{- if .Values.sizing.memory }}
_moved_sizing_memory_requests: {{ if .Values.sizing.memory.requests }} {{ fail "Bad use of moved variable sizing.memory.requests. The new name to use is config.memory.requests" }} {{else}} ok {{end}}
{{- end }}

apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "api"
  labels:
    skiff-role-name: "api"
spec:
  podManagementPolicy: "OrderedReady"
  replicas: {{ if and .Values.config.HA (eq (int .Values.sizing.api.count) 1) -}} 2 {{- else -}} {{ .Values.sizing.api.count }} {{- end }}
  serviceName: "api-set"
  template:
    metadata:
      name: "api"
      labels:
        skiff-role-name: "api"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "skiff-role-name"
                  operator: "In"
                  values:
                  - "api"
              topologyKey: "beta.kubernetes.io/os"
            weight: 100
        {{- if .Values.sizing.api.affinity.nodeAffinity }}
        nodeAffinity: {{ toJson .Values.sizing.api.affinity.nodeAffinity }}
        {{- end }}
      containers:
      - env:
        - name: "ALLOWED_CORS_DOMAINS"
          value: {{if ne (typeOf .Values.env.ALLOWED_CORS_DOMAINS) "<nil>"}}{{if has (kindOf .Values.env.ALLOWED_CORS_DOMAINS) (list "map" "slice")}}{{.Values.env.ALLOWED_CORS_DOMAINS | toJson | quote}}{{else}}{{.Values.env.ALLOWED_CORS_DOMAINS | quote}}{{end}}{{else}}{{fail "env.ALLOWED_CORS_DOMAINS has not been set"}}{{end}}
        - name: "ALLOW_APP_SSH_ACCESS"
          value: {{if ne (typeOf .Values.env.ALLOW_APP_SSH_ACCESS) "<nil>"}}{{if has (kindOf .Values.env.ALLOW_APP_SSH_ACCESS) (list "map" "slice")}}{{.Values.env.ALLOW_APP_SSH_ACCESS | toJson | quote}}{{else}}{{.Values.env.ALLOW_APP_SSH_ACCESS | quote}}{{end}}{{else}}{{fail "env.ALLOW_APP_SSH_ACCESS has not been set"}}{{end}}

        {{- if not .Values.secrets.APP_SSH_KEY_FINGERPRINT }}
        - name: "APP_SSH_KEY_FINGERPRINT"
          valueFrom:
            secretKeyRef:
              key: "app-ssh-key-fingerprint"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.APP_SSH_KEY_FINGERPRINT }}
        - name: "APP_SSH_KEY_FINGERPRINT"
          valueFrom:
            secretKeyRef:
              key: "app-ssh-key-fingerprint"
              name: "secrets"
        {{- end }}

        - name: "APP_TOKEN_UPLOAD_GRACE_PERIOD"
          value: {{if ne (typeOf .Values.env.APP_TOKEN_UPLOAD_GRACE_PERIOD) "<nil>"}}{{if has (kindOf .Values.env.APP_TOKEN_UPLOAD_GRACE_PERIOD) (list "map" "slice")}}{{.Values.env.APP_TOKEN_UPLOAD_GRACE_PERIOD | toJson | quote}}{{else}}{{.Values.env.APP_TOKEN_UPLOAD_GRACE_PERIOD | quote}}{{end}}{{else}}{{fail "env.APP_TOKEN_UPLOAD_GRACE_PERIOD has not been set"}}{{end}}

        {{- if .Values.secrets.BLOBSTORE_PASSWORD }}
        - name: "BLOBSTORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "blobstore-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.BLOBSTORE_PASSWORD }}
        - name: "BLOBSTORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "blobstore-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.BULK_API_PASSWORD }}
        - name: "BULK_API_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "bulk-api-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.BULK_API_PASSWORD }}
        - name: "BULK_API_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "bulk-api-password"
              name: "secrets"
        {{- end }}

        - name: "CATS_SUITES"
          value: {{if ne (typeOf .Values.env.CATS_SUITES) "<nil>"}}{{if has (kindOf .Values.env.CATS_SUITES) (list "map" "slice")}}{{.Values.env.CATS_SUITES | toJson | quote}}{{else}}{{.Values.env.CATS_SUITES | quote}}{{end}}{{else}}""{{end}}
        - name: "CC_DB_CURRENT_KEY_LABEL"
          value: {{if ne (typeOf .Values.env.CC_DB_CURRENT_KEY_LABEL) "<nil>"}}{{if has (kindOf .Values.env.CC_DB_CURRENT_KEY_LABEL) (list "map" "slice")}}{{.Values.env.CC_DB_CURRENT_KEY_LABEL | toJson | quote}}{{else}}{{.Values.env.CC_DB_CURRENT_KEY_LABEL | quote}}{{end}}{{else}}""{{end}}
        - name: "CC_DB_ENCRYPTION_KEYS"
          valueFrom:
            secretKeyRef:
              key: "cc-db-encryption-keys"
              name: "secrets"

        {{- if not .Values.secrets.CC_SERVER_CRT }}
        - name: "CC_SERVER_CRT"
          valueFrom:
            secretKeyRef:
              key: "cc-server-crt"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.CC_SERVER_CRT }}
        - name: "CC_SERVER_CRT"
          valueFrom:
            secretKeyRef:
              key: "cc-server-crt"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.CC_SERVER_KEY }}
        - name: "CC_SERVER_KEY"
          valueFrom:
            secretKeyRef:
              key: "cc-server-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.CC_SERVER_KEY }}
        - name: "CC_SERVER_KEY"
          valueFrom:
            secretKeyRef:
              key: "cc-server-key"
              name: "secrets"
        {{- end }}

        - name: "CDN_URI"
          value: {{if ne (typeOf .Values.env.CDN_URI) "<nil>"}}{{if has (kindOf .Values.env.CDN_URI) (list "map" "slice")}}{{.Values.env.CDN_URI | toJson | quote}}{{else}}{{.Values.env.CDN_URI | quote}}{{end}}{{else}}""{{end}}
        - name: "CLUSTER_BUILD"
          value: {{if ne (typeOf .Values.env.CLUSTER_BUILD) "<nil>"}}{{if has (kindOf .Values.env.CLUSTER_BUILD) (list "map" "slice")}}{{.Values.env.CLUSTER_BUILD | toJson | quote}}{{else}}{{.Values.env.CLUSTER_BUILD | quote}}{{end}}{{else}}{{fail "env.CLUSTER_BUILD has not been set"}}{{end}}
        - name: "CLUSTER_DESCRIPTION"
          value: {{if ne (typeOf .Values.env.CLUSTER_DESCRIPTION) "<nil>"}}{{if has (kindOf .Values.env.CLUSTER_DESCRIPTION) (list "map" "slice")}}{{.Values.env.CLUSTER_DESCRIPTION | toJson | quote}}{{else}}{{.Values.env.CLUSTER_DESCRIPTION | quote}}{{end}}{{else}}{{fail "env.CLUSTER_DESCRIPTION has not been set"}}{{end}}
        - name: "CLUSTER_NAME"
          value: {{if ne (typeOf .Values.env.CLUSTER_NAME) "<nil>"}}{{if has (kindOf .Values.env.CLUSTER_NAME) (list "map" "slice")}}{{.Values.env.CLUSTER_NAME | toJson | quote}}{{else}}{{.Values.env.CLUSTER_NAME | quote}}{{end}}{{else}}{{fail "env.CLUSTER_NAME has not been set"}}{{end}}
        - name: "CLUSTER_VERSION"
          value: {{if ne (typeOf .Values.env.CLUSTER_VERSION) "<nil>"}}{{if has (kindOf .Values.env.CLUSTER_VERSION) (list "map" "slice")}}{{.Values.env.CLUSTER_VERSION | toJson | quote}}{{else}}{{.Values.env.CLUSTER_VERSION | quote}}{{end}}{{else}}{{fail "env.CLUSTER_VERSION has not been set"}}{{end}}
        - name: "DB_ENCRYPTION_KEY"
          valueFrom:
            secretKeyRef:
              key: "db-encryption-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        - name: "DEFAULT_APP_DISK_IN_MB"
          value: {{if ne (typeOf .Values.env.DEFAULT_APP_DISK_IN_MB) "<nil>"}}{{if has (kindOf .Values.env.DEFAULT_APP_DISK_IN_MB) (list "map" "slice")}}{{.Values.env.DEFAULT_APP_DISK_IN_MB | toJson | quote}}{{else}}{{.Values.env.DEFAULT_APP_DISK_IN_MB | quote}}{{end}}{{else}}{{fail "env.DEFAULT_APP_DISK_IN_MB has not been set"}}{{end}}
        - name: "DEFAULT_APP_MEMORY"
          value: {{if ne (typeOf .Values.env.DEFAULT_APP_MEMORY) "<nil>"}}{{if has (kindOf .Values.env.DEFAULT_APP_MEMORY) (list "map" "slice")}}{{.Values.env.DEFAULT_APP_MEMORY | toJson | quote}}{{else}}{{.Values.env.DEFAULT_APP_MEMORY | quote}}{{end}}{{else}}{{fail "env.DEFAULT_APP_MEMORY has not been set"}}{{end}}
        - name: "DEFAULT_APP_SSH_ACCESS"
          value: {{if ne (typeOf .Values.env.DEFAULT_APP_SSH_ACCESS) "<nil>"}}{{if has (kindOf .Values.env.DEFAULT_APP_SSH_ACCESS) (list "map" "slice")}}{{.Values.env.DEFAULT_APP_SSH_ACCESS | toJson | quote}}{{else}}{{.Values.env.DEFAULT_APP_SSH_ACCESS | quote}}{{end}}{{else}}{{fail "env.DEFAULT_APP_SSH_ACCESS has not been set"}}{{end}}
        - name: "DEFAULT_STACK"
          value: {{if ne (typeOf .Values.env.DEFAULT_STACK) "<nil>"}}{{if has (kindOf .Values.env.DEFAULT_STACK) (list "map" "slice")}}{{.Values.env.DEFAULT_STACK | toJson | quote}}{{else}}{{.Values.env.DEFAULT_STACK | quote}}{{end}}{{else}}""{{end}}
        - name: "DISABLE_CUSTOM_BUILDPACKS"
          value: {{if ne (typeOf .Values.env.DISABLE_CUSTOM_BUILDPACKS) "<nil>"}}{{if has (kindOf .Values.env.DISABLE_CUSTOM_BUILDPACKS) (list "map" "slice")}}{{.Values.env.DISABLE_CUSTOM_BUILDPACKS | toJson | quote}}{{else}}{{.Values.env.DISABLE_CUSTOM_BUILDPACKS | quote}}{{end}}{{else}}{{fail "env.DISABLE_CUSTOM_BUILDPACKS has not been set"}}{{end}}
        - name: "DOMAIN"
          value: {{if ne (typeOf .Values.env.DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.DOMAIN) (list "map" "slice")}}{{.Values.env.DOMAIN | toJson | quote}}{{else}}{{.Values.env.DOMAIN | quote}}{{end}}{{else}}{{fail "env.DOMAIN has not been set"}}{{end}}
        - name: "DROPLET_MAX_STAGED_STORED"
          value: {{if ne (typeOf .Values.env.DROPLET_MAX_STAGED_STORED) "<nil>"}}{{if has (kindOf .Values.env.DROPLET_MAX_STAGED_STORED) (list "map" "slice")}}{{.Values.env.DROPLET_MAX_STAGED_STORED | toJson | quote}}{{else}}{{.Values.env.DROPLET_MAX_STAGED_STORED | quote}}{{end}}{{else}}{{fail "env.DROPLET_MAX_STAGED_STORED has not been set"}}{{end}}

        {{- if not .Values.secrets.INTERNAL_API_PASSWORD }}
        - name: "INTERNAL_API_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "internal-api-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_API_PASSWORD }}
        - name: "INTERNAL_API_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "internal-api-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_CERT }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.INTERNAL_CA_KEY }}
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.INTERNAL_CA_KEY }}
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secrets"
        {{- end }}

        - name: "KUBERNETES_CLUSTER_DOMAIN"
          value: {{if ne (typeOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) "<nil>"}}{{if has (kindOf .Values.env.KUBERNETES_CLUSTER_DOMAIN) (list "map" "slice")}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | toJson | quote}}{{else}}{{.Values.env.KUBERNETES_CLUSTER_DOMAIN | quote}}{{end}}{{else}}""{{end}}
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "KUBE_SIZING_NATS_COUNT"
          value: {{ .Values.sizing.nats.count | quote }}
        - name: "LOG_LEVEL"
          value: {{if ne (typeOf .Values.env.LOG_LEVEL) "<nil>"}}{{if has (kindOf .Values.env.LOG_LEVEL) (list "map" "slice")}}{{.Values.env.LOG_LEVEL | toJson | quote}}{{else}}{{.Values.env.LOG_LEVEL | quote}}{{end}}{{else}}{{fail "env.LOG_LEVEL has not been set"}}{{end}}
        - name: "MAX_APP_DISK_IN_MB"
          value: {{if ne (typeOf .Values.env.MAX_APP_DISK_IN_MB) "<nil>"}}{{if has (kindOf .Values.env.MAX_APP_DISK_IN_MB) (list "map" "slice")}}{{.Values.env.MAX_APP_DISK_IN_MB | toJson | quote}}{{else}}{{.Values.env.MAX_APP_DISK_IN_MB | quote}}{{end}}{{else}}{{fail "env.MAX_APP_DISK_IN_MB has not been set"}}{{end}}
        - name: "MAX_HEALTH_CHECK_TIMEOUT"
          value: {{if ne (typeOf .Values.env.MAX_HEALTH_CHECK_TIMEOUT) "<nil>"}}{{if has (kindOf .Values.env.MAX_HEALTH_CHECK_TIMEOUT) (list "map" "slice")}}{{.Values.env.MAX_HEALTH_CHECK_TIMEOUT | toJson | quote}}{{else}}{{.Values.env.MAX_HEALTH_CHECK_TIMEOUT | quote}}{{end}}{{else}}{{fail "env.MAX_HEALTH_CHECK_TIMEOUT has not been set"}}{{end}}

        {{- if not .Values.secrets.METRON_CERT }}
        - name: "METRON_CERT"
          valueFrom:
            secretKeyRef:
              key: "metron-cert"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.METRON_CERT }}
        - name: "METRON_CERT"
          valueFrom:
            secretKeyRef:
              key: "metron-cert"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.METRON_KEY }}
        - name: "METRON_KEY"
          valueFrom:
            secretKeyRef:
              key: "metron-key"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.METRON_KEY }}
        - name: "METRON_KEY"
          valueFrom:
            secretKeyRef:
              key: "metron-key"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.MONIT_PASSWORD }}
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if not .Values.secrets.MYSQL_CCDB_ROLE_PASSWORD }}
        - name: "MYSQL_CCDB_ROLE_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-ccdb-role-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.MYSQL_CCDB_ROLE_PASSWORD }}
        - name: "MYSQL_CCDB_ROLE_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "mysql-ccdb-role-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.NATS_PASSWORD }}
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.NATS_PASSWORD }}
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secrets"
        {{- end }}

        - name: "NGINX_MAX_REQUEST_BODY_SIZE"
          value: {{if ne (typeOf .Values.env.NGINX_MAX_REQUEST_BODY_SIZE) "<nil>"}}{{if has (kindOf .Values.env.NGINX_MAX_REQUEST_BODY_SIZE) (list "map" "slice")}}{{.Values.env.NGINX_MAX_REQUEST_BODY_SIZE | toJson | quote}}{{else}}{{.Values.env.NGINX_MAX_REQUEST_BODY_SIZE | quote}}{{end}}{{else}}{{fail "env.NGINX_MAX_REQUEST_BODY_SIZE has not been set"}}{{end}}

        {{- if .Values.secrets.ROUTER_SERVICES_SECRET }}
        - name: "ROUTER_SERVICES_SECRET"
          valueFrom:
            secretKeyRef:
              key: "router-services-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.ROUTER_SERVICES_SECRET }}
        - name: "ROUTER_SERVICES_SECRET"
          valueFrom:
            secretKeyRef:
              key: "router-services-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "SCF_LOG_HOST"
          value: {{if ne (typeOf .Values.env.SCF_LOG_HOST) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_HOST) (list "map" "slice")}}{{.Values.env.SCF_LOG_HOST | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_HOST | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PORT"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PORT) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PORT) (list "map" "slice")}}{{.Values.env.SCF_LOG_PORT | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "SCF_LOG_PROTOCOL"
          value: {{if ne (typeOf .Values.env.SCF_LOG_PROTOCOL) "<nil>"}}{{if has (kindOf .Values.env.SCF_LOG_PROTOCOL) (list "map" "slice")}}{{.Values.env.SCF_LOG_PROTOCOL | toJson | quote}}{{else}}{{.Values.env.SCF_LOG_PROTOCOL | quote}}{{end}}{{else}}{{fail "env.SCF_LOG_PROTOCOL has not been set"}}{{end}}
        - name: "STAGER_INSECURE_DOCKER_REGISTRIES"
          value: {{if ne (typeOf .Values.env.STAGER_INSECURE_DOCKER_REGISTRIES) "<nil>"}}{{if has (kindOf .Values.env.STAGER_INSECURE_DOCKER_REGISTRIES) (list "map" "slice")}}{{.Values.env.STAGER_INSECURE_DOCKER_REGISTRIES | toJson | quote}}{{else}}{{.Values.env.STAGER_INSECURE_DOCKER_REGISTRIES | quote}}{{end}}{{else}}""{{end}}
        - name: "STAGING_TIMEOUT"
          value: {{if ne (typeOf .Values.env.STAGING_TIMEOUT) "<nil>"}}{{if has (kindOf .Values.env.STAGING_TIMEOUT) (list "map" "slice")}}{{.Values.env.STAGING_TIMEOUT | toJson | quote}}{{else}}{{.Values.env.STAGING_TIMEOUT | quote}}{{end}}{{else}}{{fail "env.STAGING_TIMEOUT has not been set"}}{{end}}

        {{- if .Values.secrets.STAGING_UPLOAD_PASSWORD }}
        - name: "STAGING_UPLOAD_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "staging-upload-password"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.STAGING_UPLOAD_PASSWORD }}
        - name: "STAGING_UPLOAD_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "staging-upload-password"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "SUPPORT_ADDRESS"
          value: {{if ne (typeOf .Values.env.SUPPORT_ADDRESS) "<nil>"}}{{if has (kindOf .Values.env.SUPPORT_ADDRESS) (list "map" "slice")}}{{.Values.env.SUPPORT_ADDRESS | toJson | quote}}{{else}}{{.Values.env.SUPPORT_ADDRESS | quote}}{{end}}{{else}}{{fail "env.SUPPORT_ADDRESS has not been set"}}{{end}}
        - name: "SUSE_STACK"
          value: "sle12"
        - name: "SUSE_STACK_DESCRIPTION"
          value: "SLE-based filesystem"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"

        {{- if not .Values.secrets.UAA_CLIENTS_CC_ROUTING_SECRET }}
        - name: "UAA_CLIENTS_CC_ROUTING_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-routing-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CC_ROUTING_SECRET }}
        - name: "UAA_CLIENTS_CC_ROUTING_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-routing-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-dashboards-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_DASHBOARDS_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-dashboards-client-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-key-client-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET }}
        - name: "UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-key-client-secret"
              name: "secrets"
        {{- end }}

        {{- if .Values.secrets.UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET }}
        - name: "UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cloud-controller-username-lookup-secret"
              name: "secrets"
        {{- end }}

        {{- if not .Values.secrets.UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET }}
        - name: "UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cloud-controller-username-lookup-secret"
              name: "secrets-{{ .Chart.Version }}-{{ .Values.kube.secrets_generation_counter }}"
        {{- end }}

        - name: "UAA_HOST"
          value: {{if ne (typeOf .Values.env.UAA_HOST) "<nil>"}}{{if has (kindOf .Values.env.UAA_HOST) (list "map" "slice")}}{{.Values.env.UAA_HOST | toJson | quote}}{{else}}{{.Values.env.UAA_HOST | quote}}{{end}}{{else}}{{fail "env.UAA_HOST has not been set"}}{{end}}
        - name: "UAA_PORT"
          value: {{if ne (typeOf .Values.env.UAA_PORT) "<nil>"}}{{if has (kindOf .Values.env.UAA_PORT) (list "map" "slice")}}{{.Values.env.UAA_PORT | toJson | quote}}{{else}}{{.Values.env.UAA_PORT | quote}}{{end}}{{else}}""{{end}}
        - name: "USE_DIEGO_PRIVILEGED_CONTAINERS"
          value: {{if ne (typeOf .Values.env.USE_DIEGO_PRIVILEGED_CONTAINERS) "<nil>"}}{{if has (kindOf .Values.env.USE_DIEGO_PRIVILEGED_CONTAINERS) (list "map" "slice")}}{{.Values.env.USE_DIEGO_PRIVILEGED_CONTAINERS | toJson | quote}}{{else}}{{.Values.env.USE_DIEGO_PRIVILEGED_CONTAINERS | quote}}{{end}}{{else}}{{fail "env.USE_DIEGO_PRIVILEGED_CONTAINERS has not been set"}}{{end}}
        - name: "USE_STAGER_PRIVILEGED_CONTAINERS"
          value: {{if ne (typeOf .Values.env.USE_STAGER_PRIVILEGED_CONTAINERS) "<nil>"}}{{if has (kindOf .Values.env.USE_STAGER_PRIVILEGED_CONTAINERS) (list "map" "slice")}}{{.Values.env.USE_STAGER_PRIVILEGED_CONTAINERS | toJson | quote}}{{else}}{{.Values.env.USE_STAGER_PRIVILEGED_CONTAINERS | quote}}{{end}}{{else}}{{fail "env.USE_STAGER_PRIVILEGED_CONTAINERS has not been set"}}{{end}}
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-api:cf172fab64006861cd4ca2c97971b8d7556eedeb"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "api"
        ports:
        - containerPort: 9022
          name: "api"
          protocol: "TCP"
        - containerPort: 9023
          name: "api-tls"
          protocol: "TCP"
        - containerPort: 8125
          name: "statsd"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
            - "curl --silent --fail http://${HOSTNAME}:9022/v2/info"
        resources:
          requests:
            {{- if and .Values.config.memory.requests .Values.sizing.api.memory.request }}
            memory: "{{ int .Values.sizing.api.memory.request }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.requests .Values.sizing.api.cpu.request }}
            cpu: "{{ int .Values.sizing.api.cpu.request }}m"
            {{- end }}

          limits:
            {{- if and .Values.config.memory.limits .Values.sizing.api.memory.limit }}
            memory: "{{ int .Values.sizing.api.memory.limit }}Mi"
            {{- end }}

            {{- if and .Values.config.cpu.limits .Values.sizing.api.cpu.limit }}
            cpu: "{{ int .Values.sizing.api.cpu.limit }}m"
            {{- end }}

        securityContext:
          {{- if has "ALL" .Values.sizing.api.capabilities }}
          privileged: true
          {{- end }}

          {{- if not (has "ALL" .Values.sizing.api.capabilities) }}
          capabilities:
            add:
            {{- range .Values.sizing.api.capabilities }}
            - {{ . | upper }}
            {{- end }}
          {{- end }}

        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 600
      volumes: ~
  {{- if or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (.Capabilities.KubeVersion.Minor | trimSuffix "+" | int) 7)) }}
  updateStrategy:
    type: "RollingUpdate"
  {{- end }}
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "api-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "api"
      port: 9022
      protocol: "TCP"
      targetPort: 0
    - name: "api-tls"
      port: 9023
      protocol: "TCP"
      targetPort: 0
    - name: "statsd"
      port: 8125
      protocol: "TCP"
      targetPort: 0
    selector:
      skiff-role-name: "api"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "api"
  spec:
    ports:
    - name: "api"
      port: 9022
      protocol: "TCP"
      targetPort: "api"
    - name: "api-tls"
      port: 9023
      protocol: "TCP"
      targetPort: "api-tls"
    - name: "statsd"
      port: 8125
      protocol: "TCP"
      targetPort: "statsd"
    selector:
      skiff-role-name: "api"
kind: "List"
