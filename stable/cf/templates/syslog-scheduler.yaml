---
# The syslog-scheduler role contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# Also: scheduler, metron_agent

{{- if gt (int .Values.sizing.syslog_scheduler.count) 1 }}
_maxReplicas: {{ fail "syslog_scheduler cannot have more than 1 instances" }}
{{- end }}

{{- if lt (int .Values.sizing.syslog_scheduler.count) 1 }}
_minReplicas: {{ fail "syslog_scheduler must have at least 1 instances" }}
{{- end }}

apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  name: "syslog-scheduler"
  labels:
    skiff-role-name: "syslog-scheduler"
spec:
  replicas: {{ .Values.sizing.syslog_scheduler.count }}
  selector:
    matchLabels:
      skiff-role-name: "syslog-scheduler"
  template:
    metadata:
      name: "syslog-scheduler"
      labels:
        skiff-role-name: "syslog-scheduler"
    spec:
      containers:
      - env:
        - name: "CATS_SUITES"
          value: {{ .Values.env.CATS_SUITES | quote }}
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secret"
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secret"
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "KUBE_SERVICE_DOMAIN_SUFFIX"
          value: {{ .Values.env.KUBE_SERVICE_DOMAIN_SUFFIX | quote }}
        - name: "METRON_CERT"
          valueFrom:
            secretKeyRef:
              key: "metron-cert"
              name: "secret"
        - name: "METRON_KEY"
          valueFrom:
            secretKeyRef:
              key: "metron-key"
              name: "secret"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secret"
        - name: "RELEASE_REVISION"
          value: {{ .Release.Revision | quote }}
        - name: "SCF_LOG_HOST"
          value: {{ .Values.env.SCF_LOG_HOST | quote }}
        - name: "SCF_LOG_PORT"
          value: {{ .Values.env.SCF_LOG_PORT | quote }}
        - name: "SCF_LOG_PROTOCOL"
          value: {{ required "SCF_LOG_PROTOCOL configuration missing" .Values.env.SCF_LOG_PROTOCOL | quote }}
        - name: "SYSLOG_SCHED_CERT"
          valueFrom:
            secretKeyRef:
              key: "syslog-sched-cert"
              name: "secret"
        - name: "SYSLOG_SCHED_KEY"
          valueFrom:
            secretKeyRef:
              key: "syslog-sched-key"
              name: "secret"
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-syslog-scheduler:37ba4b9ebd9b849f9c8ae3b82d9ff1d045726b55"
        livenessProbe: ~
        name: "syslog-scheduler"
        ports:
        - containerPort: 8080
          name: "schedula3075ea4"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 0
          httpGet:
            path: "/health"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        resources: ~
        securityContext: ~
        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "syslog-scheduler"
  spec:
    ports:
    - name: "schedula3075ea4"
      port: 8080
      protocol: "TCP"
      targetPort: "schedula3075ea4"
    selector:
      skiff-role-name: "syslog-scheduler"
    type: {{ if .Values.services.loadbalanced }} LoadBalancer {{ else }} ClusterIP {{ end }}
kind: "List"
