# generate helm hooks from contents in the `hooks` folder
{{ range $_, $hook := tuple "pre-delete" "pre-upgrade" }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{$hook}}-helm-hook
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
  annotations:
    "helm.sh/hook": {{$hook}}
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": before-hook-creation
---
{{- if $.Values.global.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    "helm.sh/hook": {{$hook}}
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": before-hook-creation
  name: cf-operator-{{$hook}}-helm-hook
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - delete
---
{{- if $.Values.global.singleNamespace.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{$hook}}-helm-hook
  namespace: {{ $.Values.global.singleNamespace.name | quote }}
  annotations:
    "helm.sh/hook": {{$hook}}
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups: [quarks.cloudfoundry.org]
  resources: [quarksjobs]
  resourceNames: [dm]
  verbs: [delete]
---
{{- end }}
apiVersion: v1
kind: List
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
    "helm.sh/hook": {{$hook}}
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": before-hook-creation
items:
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: {{$hook}}-helm-hook
      annotations:
        rbac.authorization.kubernetes.io/autoupdate: "true"
        "helm.sh/hook": {{$hook}}
        "helm.sh/hook-weight": "-2"
        "helm.sh/hook-delete-policy": before-hook-creation
    subjects:
    - kind: ServiceAccount
      name: {{$hook}}-helm-hook
      namespace: {{ $.Release.Namespace }}
    roleRef:
      kind: ClusterRole
      name: cf-operator-{{$hook}}-helm-hook
      apiGroup: rbac.authorization.k8s.io
  {{- if $.Values.global.singleNamespace.create }}
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: {{$hook}}-helm-hook
      namespace: {{ $.Values.global.singleNamespace.name | quote }}
      annotations:
        rbac.authorization.kubernetes.io/autoupdate: "true"
        "helm.sh/hook": {{$hook}}
        "helm.sh/hook-weight": "-2"
        "helm.sh/hook-delete-policy": before-hook-creation
    subjects:
    - kind: ServiceAccount
      name: {{$hook}}-helm-hook
      namespace: {{ $.Release.Namespace }}
    roleRef:
      kind: Role
      name: {{$hook}}-helm-hook
      apiGroup: rbac.authorization.k8s.io
  {{- end }}
{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ $.Release.Name }}-{{$hook}}-hook"
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
  annotations:
    "helm.sh/hook": {{$hook}}
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: "{{ $.Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
        app.kubernetes.io/instance: {{ $.Release.Name | quote }}
        helm.sh/chart: {{ include "cf-operator.chart" $ }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{$hook}}-helm-hook
      containers:
      - name: {{$hook}}-job
        image: {{ $.Values.operator.hookDockerImage | quote }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if $.Values.global.singleNamespace.create }}
        - name: SINGLE_NAMESPACE
          value: {{ $.Values.global.singleNamespace.name | quote }}
        {{- end }}
        command: ["/bin/bash","-cex"]
        args: 
        - |
           for f in /hooks/*.sh; do 
            bash "$f" -H || break
           done
        volumeMounts:
        - name: hooks
          mountPath: "/hooks"
          readOnly: true
      volumes:
      - name: hooks
        configMap:
          name: {{$hook}}-hook-scripts
---
{{- $path := printf "hooks/%s/*" $hook }}
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
  annotations:
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook": {{$hook}}
    "helm.sh/hook-delete-policy": before-hook-creation
  name: {{$hook}}-hook-scripts
data:
  {{- ($.Files.Glob $path).AsConfig | nindent 2 }}
{{- end }}
