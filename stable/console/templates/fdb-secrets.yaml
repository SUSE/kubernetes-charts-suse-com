{{/*
Generate self-signed certificate
*/}}
{{- define "fdbdoclayer.generateCertificate" -}}
{{- $altNames := list ( printf "%s%s" .Release.Name "-fdbdoclayer") ( printf "%s%s.%s" (include "fullname" .) "-fdbdoclayer" .Release.Namespace ) ( printf "%s.%s.svc" (include "console.certName" .) .Release.Namespace ) -}}
{{- $ca := genCA "stratos-ca" 365 -}}
{{- $cert := genSignedCert "fdbdoclayer" nil $altNames 365 $ca -}}
tls.crt: {{ $cert.Cert | b64enc }}
tls.key: {{ $cert.Key | b64enc }}
tls.pem: {{ printf "%s\n%s\n%s\n" ($cert.Cert) ($ca.Cert) ($cert.Key) | b64enc }}
ca.crt:  {{ $ca.Cert | b64enc }}
{{- end -}}

---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: {{ .Release.Name }}-fdbdoclayer-certs
  labels:
    app.kubernetes.io/name: "stratos"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "fdbdoclayer-certs"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
data:
{{ (include "fdbdoclayer.generateCertificate" .) | indent 2 }}