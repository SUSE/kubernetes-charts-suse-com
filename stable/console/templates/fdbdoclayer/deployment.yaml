
{{- if semverCompare ">=1.16" (printf "%s.%s" .Capabilities.KubeVersion.Major (trimSuffix "+" .Capabilities.KubeVersion.Minor) )}}
apiVersion: apps/v1
{{- else }}
apiVersion: apps/v1beta2
{{- end }}
kind: Deployment
metadata:
  name: stratos-chartstore
{{- if .Values.console.deploymentAnnotations }}
  annotations:
{{ toYaml .Values.console.deploymentAnnotations | indent 4 }}
{{- end }}
  labels:
    app.kubernetes.io/name: "stratos"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/component: "stratos-chartstore"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
{{- if .Values.console.deploymentExtraLabels }}
{{ toYaml .Values.console.deploymentExtraLabels | indent 4 }}
{{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "stratos"
      app.kubernetes.io/instance: "{{ .Release.Name }}"
      app.kubernetes.io/component: "stratos-chartstore"
  template:
    metadata:
{{- if .Values.console.podAnnotations }}
      annotations:
{{ toYaml .Values.console.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app.kubernetes.io/name: "stratos"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
        app.kubernetes.io/component: "stratos-chartstore"
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
        {{- if .Values.console.podExtraLabels}}
        {{ toYaml .Values.console.podExtraLabels | nindent 8 }}
        {{- end}}        
    spec:
{{- with .Values.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
{{- end }}
      containers:
      - name: fdbdoclayer
        image: {{.Values.kube.registry.hostname}}/{{.Values.kube.organization}}/{{.Values.images.fdbdoclayer}}:3.1.0-0d657242b-cap
        imagePullPolicy: {{.Values.imagePullPolicy}}
        env:
        - name: FDB_COORDINATOR
          value: {{ .Release.Name }}-fdbdoclayer
        - name: FDB_LISTEN_IP
          value: 0.0.0.0
        - name: CLUSTER_ID 
          value: chartdb:erlklkg
        - name: ENABLE_TLS
          value: "true"
        - name: SERVER_CRT
          value: "/etc/secrets/tls.crt"
        - name: SERVER_KEY
          value: "/etc/secrets/tls.key"
        - name: CA_CRT
          value: "/etc/secrets/ca.crt"   
        - name: FDB_NETWORKING_MODE 
          value: container
        ports:
        - containerPort: 27016
        livenessProbe:
          tcpSocket:
            port: 27016
          initialDelaySeconds: 3
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 27016
          initialDelaySeconds: 3
          periodSeconds: 10
        volumeMounts:
        - name: certs
          mountPath: "/etc/secrets"
          readOnly: true
      - name: fdbserver
        image: {{.Values.kube.registry.hostname}}/{{.Values.kube.organization}}/{{.Values.images.fdbserver}}:3.1.0-0d657242b-cap
        imagePullPolicy: {{.Values.imagePullPolicy}}
        env:
        - name: FDB_COORDINATOR
          value: {{ .Release.Name }}-fdbdoclayer
        - name: FDB_LISTEN_IP
          value: 0.0.0.0
        - name: CLUSTER_ID
          value: chartdb:erlklkg
        - name: FDB_NETWORKING_MODE 
          value: container
        ports:
        - containerPort: 4500
        livenessProbe:
          tcpSocket:
            port: 4500
          initialDelaySeconds: 3
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 4500
          initialDelaySeconds: 3
          periodSeconds: 10
      volumes:
        - name: certs
          secret:
            secretName: {{ .Release.Name }}-fdbdoclayer-certs
