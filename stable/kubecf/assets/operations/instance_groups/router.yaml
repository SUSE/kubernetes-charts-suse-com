# Add quarks properties for the gorouter job.
- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/quarks?
  value:
    ports:
    - name: router
      protocol: TCP
      internal: 80
    - name: router-ssl
      protocol: TCP
      internal: 443
    run:
      healthcheck:
        gorouter:
          readiness:
            httpGet:
              port: 8080
              path: /health
    post_start:
      condition:
        exec:
          command: ["curl", "--fail", "--head", "http://127.0.0.1:8080/health"]

# Disable tuning /proc/sys kernel parameters as things are running on a container.
- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router?/set_kernel_parameters
  value: false

- type: replace
  path: /instance_groups/name=router/jobs/name=loggr-udp-forwarder/properties/quarks?
  value:
    run:
      healthcheck:
        loggr-udp-forwarder:
          readiness:
            exec:
              command: ["sh", "-c", "ss -nlu sport = 3457 | grep :3457"]
    envs:
    - name: INDEX
      valueFrom:
        fieldRef:
          fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
    - name: IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP

# Add necessary labels to the router instance group so that the service can select it to create the
# endpoint.
- type: replace
  path: /instance_groups/name=router/env?/bosh/agent/settings/labels/app.kubernetes.io~1component
  value: "router"
- type: replace
  path: /instance_groups/name=router/env?/bosh/agent/settings/labels/app.kubernetes.io~1instance
  value: {{ .Release.Name | quote }}
- type: replace
  path: /instance_groups/name=router/env?/bosh/agent/settings/labels/app.kubernetes.io~1version
  value: {{ default .Chart.Version .Chart.AppVersion | quote }}

# Update cipher suites based on https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations
- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/cipher_suites?
  value: "\
    ECDHE-ECDSA-CHACHA20-POLY1305:\
    ECDHE-RSA-CHACHA20-POLY1305:\
    ECDHE-ECDSA-AES128-GCM-SHA256:\
    ECDHE-RSA-AES128-GCM-SHA256:\
    ECDHE-ECDSA-AES256-GCM-SHA384:\
    ECDHE-RSA-AES256-GCM-SHA384:\
    AES128-GCM-SHA256:\
    AES256-GCM-SHA384"

# Trust the diego_instance_identity_ca certificate - trusting its CA
# is insufficient with the cf-operator
# Also add the CredHub CA
- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/ca_certs
  value: |
    ((diego_instance_identity_ca.ca))
    ((cc_tls.ca))
    ((uaa_ssl.ca))
    ((network_policy_server_external.ca))

{{- if .Values.features.credhub.enabled }}
- path: /instance_groups/name=router/jobs/name=gorouter/properties/router/ca_certs
  type: replace
  value: |
    ((diego_instance_identity_ca.ca))
    ((cc_tls.ca))
    ((uaa_ssl.ca))
    ((network_policy_server_external.ca))
    ((credhub_ca.certificate))
{{- end }}

# If the router certificate is provided via Helm, don't generate the router_ca and router_ssl
# certificates. router_ssl becomes an implicit variable.
{{- if .Values.settings.router.tls }}
- type: remove
  path: /variables/name=router_ca
- type: remove
  path: /variables/name=router_ssl
{{- with $tls := .Values.settings.router.tls }}
- type: replace
  path: /instance_groups/name=router/jobs/name=gorouter/properties/router/tls_pem
  value:
  - cert_chain: |
      {{- $tls.crt | nindent 6 }}
    private_key: |
      {{- $tls.key | nindent 6 }}
{{- end }}
{{- end }}

{{- range $bytes := .Files.Glob "assets/operations/pre_render_scripts/router_*" }}
{{ $bytes | toString }}
{{- end }}
