# generate helm hooks from contents in the `hooks` folder
{{ range $_, $hook := tuple "pre-delete" "pre-upgrade" }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $hook }}-helm-hook
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
  annotations:
    "helm.sh/hook": {{ $hook }}
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ $hook }}-helm-hook-role
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    "helm.sh/hook": {{ $hook }}
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups: [ apps ]
  resources: [ statefulsets ]
  verbs: [ list, get, patch ]
- apiGroups: [ "" ]
  resources: [ pods ]
  verbs: [ list, get, delete ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: {{ $hook }}-helm-hook-role-binding
  namespace: {{ $.Release.Namespace | quote }}
  annotations:
    "helm.sh/hook": {{ $hook }}
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ $hook }}-helm-hook-role
subjects:
- kind: ServiceAccount
  name: {{ $hook }}-helm-hook
  namespace: {{ $.Release.Namespace | quote }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ $.Release.Name }}-{{ $hook }}-hook"
  namespace: {{ $.Release.Namespace | quote }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
  annotations:
    "helm.sh/hook": {{ $hook }}
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: "{{ $.Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
        app.kubernetes.io/instance: {{ $.Release.Name | quote }}
        helm.sh/chart: {{ include "kubecf.chart" $ }}
    spec:
      restartPolicy: Never
      serviceAccountName: {{ $hook }}-helm-hook
      containers:
      - name: {{ $hook }}-job
        image: {{ $.Values.hooks.image | quote }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command: ["/bin/bash","-cex"]
        args:
        - |
           shopt -s nullglob
           for f in /hooks/*.sh; do
            bash "$f" || exit 1
           done
        volumeMounts:
        - name: hooks
          mountPath: "/hooks"
          readOnly: true
      volumes:
      - name: hooks
        configMap:
          name: {{ $hook }}-hook-scripts
---
{{- $path := printf "hooks/%s/*" $hook }}
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service | quote }}
    app.kubernetes.io/instance: {{ $.Release.Name | quote }}
  annotations:
    "helm.sh/hook-weight": "-2"
    "helm.sh/hook": {{ $hook }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  name: {{ $hook }}-hook-scripts
  namespace: {{ $.Release.Namespace | quote }}
data:
  {{- ($.Files.Glob $path).AsConfig | nindent 2 }}
{{- end }}
