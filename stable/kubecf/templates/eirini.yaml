{{- if .Values.features.eirini.enabled }}

{{- $deployment := include "kubecf.deployment-name" . }}

# eirini-webhook cluster role for eirini service account.
# Used to implement eirinix extensions.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Namespace }}:eirini-webhook
rules:
- apiGroups: ['admissionregistration.k8s.io']
  resources: ['mutatingwebhookconfigurations']
  verbs: ['*']

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Namespace }}:eirini-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Namespace }}:eirini-webhook
subjects:
- kind: ServiceAccount
  name: eirini
  namespace: {{ .Release.Namespace }}

{{- if gt (len .Values.features.eirini.rbac.webhook.cluster_role.rules) 0 }}
# eirini-webhook-user-provided cluster role for eirini service account.
# If user provides a customized cluster role, it is used to implement eirinix extensions.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Namespace }}:eirini-webhook-user-provided
rules: {{ .Values.features.eirini.rbac.webhook.cluster_role.rules | toJson }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Namespace }}:eirini-webhook-user-provided
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Namespace }}:eirini-webhook-user-provided
subjects:
- kind: ServiceAccount
  name: eirini
  namespace: {{ .Release.Namespace }}
{{- end }}

# A service for the cc uploader
---
apiVersion: v1
kind: Service
metadata:
  name: cc-uploader
  namespace: {{ .Release.Namespace | quote }}
spec:
  type: ClusterIP
  selector:
    quarks.cloudfoundry.org/instance-group-name: api
    quarks.cloudfoundry.org/deployment-name: {{ $deployment }}
  ports:
    - protocol: TCP
      name: "http"
      port: 9090
      targetPort: 9090
    - protocol: TCP
      name: "https"
      port: 9091
      targetPort: 9091
# A service for the eirini image registry
---
apiVersion: v1
kind: Service
metadata:
  name: eirini-registry
  namespace: {{ .Release.Namespace | quote }}
spec:
  type: NodePort
  selector:
    quarks.cloudfoundry.org/instance-group-name: bits
    quarks.cloudfoundry.org/deployment-name: {{ $deployment }}
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
      nodePort: {{ .Values.features.eirini.registry.service.nodePort }}
# A service for eirini-ssh
---
apiVersion: v1
kind: Service
metadata:
  name: eirini-ssh
  namespace: {{ .Release.Namespace | quote }}
spec:
  type: ClusterIP
  selector:
    quarks.cloudfoundry.org/instance-group-name: eirini
    quarks.cloudfoundry.org/deployment-name: {{ $deployment }}
  ports:
    - protocol: TCP
      name: "https"
      port: 443
      targetPort: 2999
# A service for eirini-persi
---
apiVersion: v1
kind: Service
metadata:
  name: eirini-persi
  namespace: {{ .Release.Namespace | quote }}
spec:
  type: ClusterIP
  selector:
    quarks.cloudfoundry.org/instance-group-name: eirini
    quarks.cloudfoundry.org/deployment-name: {{ $deployment }}
  ports:
    - protocol: TCP
      name: "https"
      port: 443
      targetPort: 8443
# A service for eirini-persi-broker
---
apiVersion: v1
kind: Service
metadata:
  name: eirini-persi-broker
  namespace: {{ .Release.Namespace | quote }}
spec:
  type: ClusterIP
  selector:
    quarks.cloudfoundry.org/instance-group-name: eirini
    quarks.cloudfoundry.org/deployment-name: {{ $deployment }}
  ports:
    - protocol: TCP
      name: "http"
      port: 8999
      targetPort: 8999
---
# A namespace where eirini apps are created
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Release.Namespace }}-eirini
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eirini
  namespace: {{ .Release.Namespace | quote }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eirini:all
  namespace: {{ .Release.Namespace }}-eirini
rules:
  - apiGroups: ['*']
    resources: ['*']
    verbs:     ['*']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eirini:all
  namespace: {{ .Release.Namespace }}-eirini
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: eirini:all
subjects:
  - kind: ServiceAccount
    name: eirini
    namespace: {{ .Release.Namespace | quote }}

---
# ClusterRole to allow opi to list nodes
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Namespace }}:eirini-opi
rules:
- apiGroups: ['']
  resources: ['nodes']
  verbs:     ['*']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Namespace }}:eirini-opi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Release.Namespace }}:eirini-opi
subjects:
- kind: ServiceAccount
  name: eirini
  namespace: {{ .Release.Namespace }}

{{- end }}
