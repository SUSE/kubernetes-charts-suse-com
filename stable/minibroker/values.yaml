# Default values for the minibroker
# Image to use
image: registry.suse.com/cap/minibroker:1.2.0
# ImagePullPolicy; valid values are "IfNotPresent", "Never", and "Always"
imagePullPolicy: IfNotPresent
deploymentPolicy: RollingUpdate
# Certificate details to use for TLS. Leave blank to not use TLS
tls:
  # base-64 encoded PEM data for the TLS certificate
  cert: ~
  # base-64 encoded PEM data for the private key matching the certificate
  key: ~

# The service broker server configuration.
broker:
  # The service configuration.
  service:
    # A port for the service broker HTTP API.
    port: 80

# The logging level to use; higher values emit more information
logLevel: 3

serviceCatalogEnabledOnly: true

deployServiceCatalog: true

# A default namespace where Minibroker deploys service instances.
defaultNamespace: ~

rbac:
  create: true
  namespaced:
    # Whether Minibroker will be namespaced or not. When enabled, Minibroker will only be able to
    # manage resources in the whitelisted namespaces.
    enabled: false
    # A list of namespaces Minibroker can use to deploy service instances. The namespaces are
    # expected to be created ahead of time.
    whitelist: []
  serviceAccount:
    create: true
    name: minibroker
    annotations: {}
    labels: {}

# Optional override parameters for each of the supported service classes.
# If defined, user-provided parameters during provisioning are ignored and
# these overrides are used.
# Example:
#
# provisioning:
#   rabbitmq:
#     replicas: 1
#     ingress:
#       enabled: false
provisioning:
  mariadb:
    overrideParams: ~
  mongodb:
    overrideParams: ~
  mysql:
    overrideParams: ~
  postgresql:
    overrideParams: ~
  rabbitmq:
    overrideParams: ~
  redis:
    overrideParams: ~
