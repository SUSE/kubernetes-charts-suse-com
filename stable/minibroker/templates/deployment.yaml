{{- $deploymentPort := 8080 }}
{{- $configPath := "/minibroker" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "minibroker.fullname" . }}
  labels:
    {{- include "minibroker.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: {{ .Values.deploymentStrategy }}
  selector:
    matchLabels:
      app: {{ template "minibroker.fullname" . }}
  template:
    metadata:
      labels:
        {{- include "minibroker.labels" . | nindent 8 }}
    spec:
      serviceAccountName: minibroker
      containers:
      - name: minibroker
        image: {{ .Values.image | quote }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        args:
        - minibroker
        {{- if .Values.serviceCatalogEnabledOnly }}
        - --service-catalog-enabled-only
        {{- end }}
        {{- if .Values.helmRepoUrl }}
        - -helmUrl
        - "{{ .Values.helmRepoUrl }}"
        {{- end }}
        {{- if .Values.defaultNamespace }}
        - -defaultNamespace
        - "{{ .Values.defaultNamespace }}"
        {{- end }}
        - --port
        - {{ $deploymentPort | quote }}
        {{- if .Values.tls.cert }}
        - --tlsCert
        - "{{ .Values.tls.cert }}"
        {{- end }}
        {{- if .Values.tls.key }}
        - --tlsKey
        - "{{ .Values.tls.key }}"
        {{- end }}
        - -v
        - {{ .Values.logLevel | quote }}
        - -logtostderr
        - --provisioningSettings
        - {{ printf "%s/provisioning-settings.yaml" $configPath }}
        ports:
        - name: broker
          containerPort: {{ $deploymentPort }}
        env:
        - name: CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
          httpGet: &readinessHTTPGet
            path: /healthz
            port: {{ $deploymentPort }}
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          httpGet: *readinessHTTPGet
          initialDelaySeconds: 10
          periodSeconds: 15
          failureThreshold: 2
        volumeMounts:
        - name: provisioning-settings
          mountPath: {{ $configPath | quote}}
          readOnly: true
      volumes:
      - name: provisioning-settings
        configMap:
          name: {{ printf "%s-provisioning-settings" .Release.Name | quote }}
