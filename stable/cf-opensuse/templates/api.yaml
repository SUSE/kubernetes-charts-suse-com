---
# The api role contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure HCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - patch-properties: Dummy BOSH job used to host parameters that are used in
#   HCF patches for upstream bugs
#
# - cloud_controller_ng: The Cloud Controller provides primary Cloud Foundry API
#   that is by the CF CLI. The Cloud Controller uses a database to keep tables
#   for organizations, spaces, apps, services, service instances, user roles,
#   and more. Typically multiple instances of Cloud Controller are load
#   balanced.
#
# - route_registrar: Used for registering routes
#
# Also: consul_agent, metron_agent, statsd_injector, go-buildpack,
# binary-buildpack, nodejs-buildpack, ruby-buildpack, php-buildpack,
# python-buildpack, staticfile-buildpack, java-offline-buildpack,
# dotnet-core-buildpack

{{- if gt (int .Values.sizing.api.count) 65535 }}
_maxReplicas: {{ fail "api cannot have more than 65535 instances" }}
{{- end }}

{{- if and .Values.sizing.HA (and (ne (int .Values.sizing.api.count) 1) (lt (int .Values.sizing.api.count) 2)) }}
_minHAReplicas: {{ fail "api must have at least 2 instances for HA" }}
{{- end }}

{{- if lt (int .Values.sizing.api.count) 1 }}
_minReplicas: {{ fail "api must have at least 1 instances" }}
{{- end }}

apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "api"
  labels:
    skiff-role-name: "api"
spec:
  replicas: {{ if and .Values.sizing.HA (eq (int .Values.sizing.api.count) 1) -}} 2 {{- else -}} {{ .Values.sizing.api.count }} {{- end }}
  serviceName: "api-set"
  template:
    metadata:
      annotations:
        {{- if not (or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (int .Capabilities.KubeVersion.Minor) 6))) }}
        scheduler.alpha.kubernetes.io/affinity: "{\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"skiff-role-name\",\"operator\":\"In\",\"values\":[\"api\"]}]},\"topologyKey\":\"beta.kubernetes.io/os\"},\"weight\":100}]}}"
        {{- end }}
      labels:
        skiff-role-name: "api"
      name: "api"
    spec:
      {{- if or (gt (int .Capabilities.KubeVersion.Major) 1) (and (eq (int .Capabilities.KubeVersion.Major) 1) (ge (int .Capabilities.KubeVersion.Minor) 6)) }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "skiff-role-name"
                  operator: "In"
                  values:
                  - "api"
              topologyKey: "beta.kubernetes.io/os"
            weight: 100
      {{- end }}
      containers:
      - env:
        - name: "ALLOWED_CORS_DOMAINS"
          value: {{ required "ALLOWED_CORS_DOMAINS configuration missing" .Values.env.ALLOWED_CORS_DOMAINS | quote }}
        - name: "ALLOW_APP_SSH_ACCESS"
          value: {{ required "ALLOW_APP_SSH_ACCESS configuration missing" .Values.env.ALLOW_APP_SSH_ACCESS | quote }}
        - name: "APP_SSH_KEY_FINGERPRINT"
          valueFrom:
            secretKeyRef:
              key: "app-ssh-key-fingerprint"
              name: "secret"
        - name: "APP_TOKEN_UPLOAD_GRACE_PERIOD"
          value: {{ required "APP_TOKEN_UPLOAD_GRACE_PERIOD configuration missing" .Values.env.APP_TOKEN_UPLOAD_GRACE_PERIOD | quote }}
        - name: "BLOBSTORE_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "blobstore-password"
              name: "secret"
        - name: "BULK_API_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "bulk-api-password"
              name: "secret"
        - name: "CATS_SUITES"
          value: {{ .Values.env.CATS_SUITES | quote }}
        - name: "CCDB_ROLE_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "ccdb-role-password"
              name: "secret"
        - name: "CC_SERVER_CRT"
          valueFrom:
            secretKeyRef:
              key: "cc-server-crt"
              name: "secret"
        - name: "CC_SERVER_KEY"
          valueFrom:
            secretKeyRef:
              key: "cc-server-key"
              name: "secret"
        - name: "CDN_URI"
          value: {{ .Values.env.CDN_URI | quote }}
        - name: "CLUSTER_BUILD"
          value: {{ required "CLUSTER_BUILD configuration missing" .Values.env.CLUSTER_BUILD | quote }}
        - name: "CLUSTER_DESCRIPTION"
          value: {{ required "CLUSTER_DESCRIPTION configuration missing" .Values.env.CLUSTER_DESCRIPTION | quote }}
        - name: "CLUSTER_NAME"
          value: {{ required "CLUSTER_NAME configuration missing" .Values.env.CLUSTER_NAME | quote }}
        - name: "CLUSTER_VERSION"
          value: {{ required "CLUSTER_VERSION configuration missing" .Values.env.CLUSTER_VERSION | quote }}
        - name: "CONSUL_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "consul-agent-cert"
              name: "secret"
        - name: "CONSUL_AGENT_KEY"
          valueFrom:
            secretKeyRef:
              key: "consul-agent-key"
              name: "secret"
        - name: "CONSUL_ENCRYPTION_KEYS"
          valueFrom:
            secretKeyRef:
              key: "consul-encryption-keys"
              name: "secret"
        - name: "CONSUL_SERVER_CERT"
          valueFrom:
            secretKeyRef:
              key: "consul-server-cert"
              name: "secret"
        - name: "CONSUL_SERVER_KEY"
          valueFrom:
            secretKeyRef:
              key: "consul-server-key"
              name: "secret"
        - name: "DB_ENCRYPTION_KEY"
          valueFrom:
            secretKeyRef:
              key: "db-encryption-key"
              name: "secret"
        - name: "DEFAULT_APP_DISK_IN_MB"
          value: {{ required "DEFAULT_APP_DISK_IN_MB configuration missing" .Values.env.DEFAULT_APP_DISK_IN_MB | quote }}
        - name: "DEFAULT_APP_MEMORY"
          value: {{ required "DEFAULT_APP_MEMORY configuration missing" .Values.env.DEFAULT_APP_MEMORY | quote }}
        - name: "DEFAULT_APP_SSH_ACCESS"
          value: {{ required "DEFAULT_APP_SSH_ACCESS configuration missing" .Values.env.DEFAULT_APP_SSH_ACCESS | quote }}
        - name: "DEFAULT_STACK"
          value: {{ .Values.env.DEFAULT_STACK | quote }}
        - name: "DISABLE_CUSTOM_BUILDPACKS"
          value: {{ required "DISABLE_CUSTOM_BUILDPACKS configuration missing" .Values.env.DISABLE_CUSTOM_BUILDPACKS | quote }}
        - name: "DOMAIN"
          value: {{ required "DOMAIN configuration missing" .Values.env.DOMAIN | quote }}
        - name: "DROPLET_MAX_STAGED_STORED"
          value: {{ required "DROPLET_MAX_STAGED_STORED configuration missing" .Values.env.DROPLET_MAX_STAGED_STORED | quote }}
        - name: "HCF_LOG_HOST"
          value: {{ .Values.env.HCF_LOG_HOST | quote }}
        - name: "HCF_LOG_PORT"
          value: {{ .Values.env.HCF_LOG_PORT | quote }}
        - name: "HCF_LOG_PROTOCOL"
          value: {{ required "HCF_LOG_PROTOCOL configuration missing" .Values.env.HCF_LOG_PROTOCOL | quote }}
        - name: "HCP_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "hcp-ca-cert"
              name: "secret"
        - name: "INTERNAL_API_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "internal-api-password"
              name: "secret"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secret"
        - name: "INTERNAL_CA_KEY"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-key"
              name: "secret"
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_SERVICE_DOMAIN_SUFFIX"
          value: {{ .Values.env.KUBE_SERVICE_DOMAIN_SUFFIX | quote }}
        - name: "KUBE_SIZING_CONSUL_COUNT"
          value: {{ .Values.sizing.consul.count | quote }}
        - name: "KUBE_SIZING_NATS_COUNT"
          value: {{ .Values.sizing.nats.count | quote }}
        - name: "LOG_LEVEL"
          value: {{ required "LOG_LEVEL configuration missing" .Values.env.LOG_LEVEL | quote }}
        - name: "MAX_APP_DISK_IN_MB"
          value: {{ required "MAX_APP_DISK_IN_MB configuration missing" .Values.env.MAX_APP_DISK_IN_MB | quote }}
        - name: "MAX_HEALTH_CHECK_TIMEOUT"
          value: {{ required "MAX_HEALTH_CHECK_TIMEOUT configuration missing" .Values.env.MAX_HEALTH_CHECK_TIMEOUT | quote }}
        - name: "METRON_CERT"
          valueFrom:
            secretKeyRef:
              key: "metron-cert"
              name: "secret"
        - name: "METRON_KEY"
          valueFrom:
            secretKeyRef:
              key: "metron-key"
              name: "secret"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secret"
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secret"
        - name: "NGINX_MAX_REQUEST_BODY_SIZE"
          value: {{ required "NGINX_MAX_REQUEST_BODY_SIZE configuration missing" .Values.env.NGINX_MAX_REQUEST_BODY_SIZE | quote }}
        - name: "ROUTER_SERVICES_SECRET"
          valueFrom:
            secretKeyRef:
              key: "router-services-secret"
              name: "secret"
        - name: "STAGER_INSECURE_DOCKER_REGISTRIES"
          value: {{ .Values.env.STAGER_INSECURE_DOCKER_REGISTRIES | quote }}
        - name: "STAGING_TIMEOUT"
          value: {{ required "STAGING_TIMEOUT configuration missing" .Values.env.STAGING_TIMEOUT | quote }}
        - name: "STAGING_UPLOAD_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "staging-upload-password"
              name: "secret"
        - name: "SUPPORT_ADDRESS"
          value: {{ required "SUPPORT_ADDRESS configuration missing" .Values.env.SUPPORT_ADDRESS | quote }}
        - name: "UAA_CLIENTS_CC_ROUTING_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-routing-secret"
              name: "secret"
        - name: "UAA_CLIENTS_CC_SERVICE_KEY_CLIENT_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cc-service-key-client-secret"
              name: "secret"
        - name: "UAA_CLIENTS_CLOUD_CONTROLLER_USERNAME_LOOKUP_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-cloud-controller-username-lookup-secret"
              name: "secret"
        - name: "UAA_HOST"
          value: {{ required "UAA_HOST configuration missing" .Values.env.UAA_HOST | quote }}
        - name: "UAA_PORT"
          value: {{ .Values.env.UAA_PORT | quote }}
        - name: "USE_DIEGO_PRIVILEGED_CONTAINERS"
          value: {{ required "USE_DIEGO_PRIVILEGED_CONTAINERS configuration missing" .Values.env.USE_DIEGO_PRIVILEGED_CONTAINERS | quote }}
        - name: "USE_STAGER_PRIVILEGED_CONTAINERS"
          value: {{ required "USE_STAGER_PRIVILEGED_CONTAINERS configuration missing" .Values.env.USE_STAGER_PRIVILEGED_CONTAINERS | quote }}
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/scf-api:e4f7fcc3b670cbc2e178298f4a703b000b205a07"
        livenessProbe: ~
        name: "api"
        ports:
        - containerPort: 9022
          name: "api"
          protocol: "TCP"
        - containerPort: 9023
          name: "api-tls"
          protocol: "TCP"
        - containerPort: 8125
          name: "statsd"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 0
          httpGet:
            path: "/v2/info"
            port: 9022
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 0
          successThreshold: 0
          timeoutSeconds: 0
        resources: ~
        securityContext: ~
        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "api-set"
  spec:
    {{- if not .Values.services.loadbalanced }}
    clusterIP: "None"
    {{- end }}
    ports:
    - name: "api"
      port: 9022
      protocol: "TCP"
      targetPort: 0
    - name: "api-tls"
      port: 9023
      protocol: "TCP"
      targetPort: 0
    - name: "statsd"
      port: 8125
      protocol: "TCP"
      targetPort: 0
    selector:
      skiff-role-name: "api"
    type: {{ if .Values.services.loadbalanced }} LoadBalancer {{ else }} ClusterIP {{ end }}
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "api"
  spec:
    ports:
    - name: "api"
      port: 9022
      protocol: "TCP"
      targetPort: "api"
    - name: "api-tls"
      port: 9023
      protocol: "TCP"
      targetPort: "api-tls"
    - name: "statsd"
      port: 8125
      protocol: "TCP"
      targetPort: "statsd"
    selector:
      skiff-role-name: "api"
    type: {{ if .Values.services.loadbalanced }} LoadBalancer {{ else }} ClusterIP {{ end }}
kind: "List"
