{{- $secret := include "harbor.redis" . }}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ $secret }}"
  labels:
{{ include "harbor.labels" . | indent 4 }}
type: Opaque
data:
{{- $internalPassword := .Values.redis.internal.password | default (include "harbor.redis.internalPassword" .) }}
{{- $externalPassword := .Values.redis.external.password | default (include "harbor.redis.externalPassword" .) }}
{{- $password := ternary $internalPassword $externalPassword (eq .Values.redis.type "internal") }}
{{- $passwordCtx := (merge (dict "redisPassword" $password) .) }}
  REDIS_PASSWORD: {{ $password | b64enc | quote }}
  REDIS_URL_CORE: {{ include "harbor.redis.urlForCore" $passwordCtx | b64enc }}
  REDIS_URL_JOBSERVICE: {{ include "harbor.redis.urlForJobservice" $passwordCtx | b64enc }}
  REDIS_URL_REGISTRY: {{ include "harbor.redis.urlForRegistry" $passwordCtx | b64enc }}
  REDIS_URL_CLAIR: {{ include "harbor.redis.urlForClair" $passwordCtx | b64enc }}
  REDIS_URL_TRIVY: {{ include "harbor.redis.urlForTrivy" $passwordCtx | b64enc }}

---
{{- if .Values.redisfailover.enabled -}}
{{- if not (eq .Values.redis.type "external") -}}
{{ fail "\n\nRedis type is not set to external, but redisfailover is enabled. Set redis type to \"external\" or disable redisfailover" }}
{{- end -}}
  {{- $failoverSecretName := .Values.redisfailover.auth.secretPath }}
  {{- $prevSecret := (lookup "v1" "Secret" .Release.Namespace $failoverSecretName) }}
  {{- if not $prevSecret -}}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ $failoverSecretName }}"
  labels:
{{ include "harbor.labels" . | indent 4 }}
type: Opaque
data:
  password: {{ $externalPassword | b64enc | quote }}
  {{- end -}}
{{- end -}}
